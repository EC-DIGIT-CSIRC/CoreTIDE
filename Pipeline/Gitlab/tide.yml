workflow:
  name: $CI_COMMIT_TITLE
  rules:
    - if: $CI_COMMIT_TITLE =~ /TIDeMEC Data Model Automation/
      when: never
    - if: $CI_COMMIT_TITLE =~ /MDR STATUS PROMOTION/
      when: never
    - if: $CI_COMMIT_TITLE =~ "[Mutated]"
      when: never
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_PIPELINE_SOURCE == "web"
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

variables:
  TIDE_REPO_ACCESS: git@$CI_SERVER_HOST:$CI_PROJECT_PATH.git
  TIDE_WIKI_ACCESS: git@$CI_SERVER_HOST:$CI_PROJECT_PATH.wiki.git
  TIDE_WIKI: $CI_PROJECT_NAME.wiki
  DOCUMENTATION_TYPE: GLFM
  GIT_DEPTH: 150
  GIT_SUBMODULE_STRATEGY: recursive
  #GIT_SUBMODULE_FORCE_HTTPS: "true"
  GIT_SUBMODULE_UPDATE_FLAGS: --remote


default:
  before_script:
    # Start SSH Agent
    - eval $(ssh-agent -s)
    - mkdir -p ~/.ssh && chmod 700 ~/.ssh
    # Add Runner Key to Agent Store
    - chmod 400 "$TIDE_RUNNER_SSH_PRIVATE_KEY"
    - ssh-add "$TIDE_RUNNER_SSH_PRIVATE_KEY"
    # Add Gitlab Instance to Known Hosts
    - ssh-keyscan $CI_SERVER_HOST >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    # Configure Basic Commit User Information
    - git config --global user.email "$TIDE_RUNNER_COMMITER_EMAIL"
    - git config --global user.name "$TIDE_RUNNER_COMMITER_NAME"
    # Delete  rebase merge directory if exists to avoid conflicts
    - rm -fr ".git/rebase-merge"
    # Configure Commit Signing
    - git config --global gpg.format ssh
    - git config --global user.signingkey $TIDE_RUNNER_SSH_PUBLIC_KEY
    - git config --global commit.gpgsign true

stages:
  - debug
  - 📝 Reporting
  - 🧬 Mutation
  - ✅ Validation
  - 📖 Documentation
  - 🗿 Framework
  - 🚀 Deployment

include: 
  - local: '/Pipeline/Gitlab/modules/reporting.yml'
  - local: '/Pipeline/Gitlab/modules/mutation.yml'
  - local: '/Pipeline/Gitlab/modules/validation.yml'
  - local: '/Pipeline/Gitlab/modules/documentation.yml'
  - local: '/Pipeline/Gitlab/modules/framework.yml'
  - local: '/Pipeline/Gitlab/modules/deployment.yml'