### DEPRECATION WARNING
### MDRv2 was superseeded by MDRv3, this will remain in the framework only for 
### retrocompatibility.

title: MDR Schema validator
description: Data Model Specification for tidemec detection rules

filename: MDR1234 - Model Name.yaml
modeldoc: A Managed Detection Rule is ...

$schema: http://json-schema.org/draft-07/schema#
additionalProperties: false

required:
  - title
  - uuid
  - status
  - priority
  - meta
  - rule

properties:

  title:
    title: Display name
    type: string
    description: Verbose, human readable name for the detection rule
    example: New Abnormal Credentials added to Azure AD

  uuid: 
    title: Unique identifier for the use-case
    type: string
    format: uuid
    description: This an UUID Gen 4 (you can use https://www.uuidgenerator.net/version4 to generate UUIDs) or ALT+SHIFT+U under Visual Studio Code
    example: 323d548d-17ca-46fa-a7c7-de43302456a1

  status: 
    title: Status of the use-case
    type: string
    description: Define the status according to use case development life cycle process
    tide.vocab: true
    example: 4-IMPROVING
    default: 3-DEV

  priority: 
    title: The priority of the use-case
    type: integer
    description: Priority based on a scale from 1 to 10
    example: 4
    minimum: 1
    maximum: 10
    default: 1

  references:
    title: Detection Rule Reference
    type: array
    description: External references that explains how the detection works or a reference to the source where the detection rule was found
    format: uri
    example: https://redcanary.com/threat-detection-report/threats/emotet/#:~:text=Emotet%20is%20polymorphic%2C%20meaning%20it,active%20and%20evolving%20since%202014.
    items:
      type: string
      format: uri

  meta:
    title: Metadata
    type: object
    description: Non technical indicators helping with overall data management
    required:
      - tlp
      - version
      - created
      - modified
      - author
    
    properties:

      tlp:
        title: Traffic Light Protocol
        type: string
        tide.vocab: true
        description: "The Traffic Light Protocol - or short: TLP - was designed with the objective to create a favorable classification scheme for sharing sensitive information while keeping the control over its distribution at the same time." 
        example: green

      version:
        title: Version
        type: number
        format: integer
        description: Latest revision of the model object, always in integer 
        example: 3

      created:  
        title: Creation Date
        type: string
        format: date
        description: Creation date of initial version
        example: YYYY-MM-DD

      modified:
        title: Last Modification
        type: string
        format: date
        description: Creation date of the latest version
        example: YYYY-MM-DD

      author:
        title: Model author
        type: string
        format: email
        description: Creator of latest version
        example: amine.besson@ext.ec.europa.eu


  logsources:
    title: Logsources used for detection
    type: object
    description: Describes which logsources are used by the alert from the collection vocabulary, for analytics and 
    properties:

      splunk: 
        title: Splunk sourcetype
        type: array
        #will be integrated with log collections
        #tide.vocab: true
        sub: logsources
        description: Placeholder
      
      sentinel: 
        title: Sentinel Log Analytics Table
        type: array
        #will be integrated with log collections
        #tide.vocab: true
        sub: logsources
        description: Placeholder

  rule:
    title: Detection Rule
    type: object
    description: Technical setup of the detection rule 
    required:
      - description
      - scheduling
      - alert
    
    properties:

      description: 
        title: Description
        type: string
        tide.template.multiline : True
        description: Explanation (in English) on what this rule is trying to detect and how it is implemented.
        example: Detects unusual logons by correlating patterns of activity across multiple tools and IAM platforms

      falsepositives: 
        title: Known false positives
        type: string
        tide.template.multiline : True
        description: In english, explanation of known false-positives that couldn't be removed in the query automatically.
        example: Emergency admin logon behaviours are the same as those executed by the adversary, so can not eliminate entirely and need to aspect POC when investigating.

      scheduling: 
        title: Scheduling
        type: string
        description: Frequency at which the search needs to execute expressed in hours. Default value = 1h (every 1 hour).
        tide.vocab: true 
        example: 15m
        default: 1h

      timeframe: 
        title: Timeframe
        type: string
        description: How long in the past the search needs to go in hours/days. Default same as scheduling (value = 1h).
        example: 2h
        default: 1h
        pattern: .*(h|d|m)$

      throttling: 
        title: Throttling
        type: string
        description: How long do discard new alerts that have the same characteristics (duplicate alerts), based on the fields defined below in hours/days. Default same as scheduling (value = 1h).
        example: 5m
        default: 1h
        pattern: .*(h|d|m)$

      threshold: 
        title: Threshold
        type: integer
        description: If amount of events is higher than threshold (during the timeframe) the alert is triggered. Default = 0.
        example: 10
        default: 0

      fields: 
        title: Fields to extract
        type: object
        description: Important fields that needs to be extracted from the alert. Shown to the analyst during alert triage and of interest when escalating to an incident. Also used for throttling purposes
        example: src_ip*
        required: []
        properties:

          sentinel: 
            title: Sentinel Entities
            type: array
            description: Relevant entities that are used by sentinel to setup the alert
            example: SubscriptionID

          splunk: 
            title: Splunk Fields
            type: array
            description: Correlation search in spl language
            example: src_ip*


      alert:
        title: Technical Detection Rules
        type: object
        description: Exact queries that will be uploaded to each detection platforms and will trigger an alert.
        required: []
        properties:

          sentinel: 
            title: Sentinel KQL Detection Rule
            type: string
            tide.template.multiline : True
            description: Scheduled query in KQL language
            example: 'SignInLogs | evaluate bag_unpack(LocationDetails)'

          splunk: 
            title: Splunk SPL Detection Rule
            type: string
            tide.template.multiline : True
            description: Correlation search in spl language
            example: '| search (code=10 OR code=29 OR code=43) host!="localhost" xqp>5'

          suricata: 
            title: Suricata IDS Detection Rule
            type: string
            tide.template.multiline : True
            description: Suricata detection rule
            example: drop tcp $HOME_NET any -> $EXTERNAL_NET any (msg:”ET TROJAN Likely Bot Nick in IRC (USA +..)”; flow:established,to_server; flowbits:isset,is_proto_irc; content:”NICK “; pcre:”/NICK .*USA.*[0-9]{3,}/i”; reference:url,doc.emergingthreats.net/2008124; classtype:trojan-activity; sid:2008124; rev:2;)

          carbonblackcloud: 
            title: Carbon Black Cloud Detection Rule
            type: string
            tide.template.multiline : True
            description: Carbon black query IOC
            example: process_md5:6d7c8a951af6ad6835c029b3cb88d333

          sysdig: 
            title: Sysdig Falco Rule
            type: string
            tide.template.multiline : True
            description: "Falco Rules is the standard use by the Sysdig platform to express detections. See: https://falco.org/docs/rules/"
            example: "YAML format, see : https://falco.org/docs/rules/basic-elements/#rules"


  investigation:
    title: Recommended Investigation Queries
    type: object
    description: First query that is recommended for the analyst to run in the SIEM in order to start pivoting in the data of the alert being responded to.
    required: []

    properties:

      sentinel: 
        title: Sentinel KQL Query
        type: string
        tide.template.multiline : True
        description: Scheduled query in KQL language 
        example: 'SignInLogs | evaluate bag_unpack(LocationDetails)'

      splunk: 
        title: Splunk SPL Detection Rule
        type: string
        tide.template.multiline : True
        description: Correlation search in spl language
        example: '| search (code=10 OR code=29 OR code=43) host!="localhost" xqp>5'

  tags:
    title: Tags
    type: object
    description: Tags related to the use-case.
    properties:

      tide.vocab: 
        title: TIDeMEC Cyber Detection Model
        type: string
        tide.vocab: true
        description: CDM that this detection rule is implementing.
        example: CDM0016

      att&ck: 
        title: MITRE ATT&CK technique
        type: string
        tide.vocab: true
        description: MITRE ATT&CK technique or sub-technique if relevant
        example: T1070.001
      
      playbook: 
        title: Playbook link
        type: string
        format: uri
        description: Link to the playbook on Confluence
        example: https://internal-knowledge-base/playbook/account_brute_force
      
      alert_handling_team:
        title: Alert Handling Team
        type: string
        tide.vocab: true
        description: Team responsible for handling related incoming alerts

    
  validation:
    title: Rule validation
    description: Define automated or manual steps to trigger the alert (to provide evidence that the rule works)
    type: object
    required: []
    properties:
      
      test: 
        title: Test description
        type: string
        description: Brief description of the test (could be referenced)
        example: Generates large amount of Kerberos activity to test AD related rules.
      
      platform: 
        title: Testing platform (Operating system)
        type: string
        description: On which platform (windows, linux,...) to execute the test
        example: Windows
      
      executor: 
        title: Test execution 
        type: string
        description: Tool or command line executing the test commands
        example: Powershell
      
      commands: 
        title: Test commands
        type: string
        description: Command to execute the test and trigger the alert
        example: Write-Host "STARTING TO SET BYPASS and DISABLE DEFENDER REALTIME MON" -fore green \ Import-Module "$Env:Temp\PowerDump.ps1" \Invoke-PowerDump
