description: Internal Reference to TIDeMEC existing cyber detection models
icon: üõ°Ô∏è
name: Cyber Detection Models
field: detection_model
model: true
keys:
  - id: CDM0001
    name: Account manipulation in AD
    description: 'Monitor Azure Activity Logs (Azure) or Windows Security Logs (AD)
      for Service Principal and Application modifications. Detect when new rights
      are being granted to an existing account and when new high priviledge roles
      are created from a single, trusted one within a short span of time, especially
      when it is followed by a high rate of subsequent resource access and modification. '
    criticality: Low
    tlp: green
    link: Engines\documentation\wiki\Knowledge-GraphDetection-Models%F0%9F%9B%A1%EF%B8%8F-%5BCDM0001%5D-Account-manipulation-in-AD
  - id: CDM0002
    name: Track M365 for high risk role creation
    description: 'Monitor the Microsoft 365 tenant for the creation of new Management
      Role  Assignments. This can be done by creating rules to alert on the  New-ManagementRoleAssignment
      operation and further filter for the  assignment of the ApplicationImpersonation
      role.  '
    criticality: Severe
    tlp: green
    link: Engines\documentation\wiki\Knowledge-GraphDetection-Models%F0%9F%9B%A1%EF%B8%8F-%5BCDM0002%5D-Track-M365-for-high-risk-role-creation
  - id: CDM0003
    name: Identify critical partner operations with delegated permissions
    description: 'The Azure AD sign-in logs record sign-ins by partners who have been
      delegated  administrative permissions. For enhanced visibility of sign-in events
      initiated  by partner organizations, the logs can be filtered specific to the
      property of  "crossTenantAccessType" matching "serviceProvider". Track activities
      from 3rd particularly regarding if they start to accumulate privileges or do
      critical  actions and operations on key infrastructure. '
    criticality: High
    tlp: green
    link: Engines\documentation\wiki\Knowledge-GraphDetection-Models%F0%9F%9B%A1%EF%B8%8F-%5BCDM0003%5D-Identify-critical-partner-operations-with-delegated-permissions
  - id: CDM0004
    name: Detect adversary signed SAML Tokens
    description: 'Search for any logins to service providers using SAML SSO, which
      do not have corresponding Windows Security Log events 4769, 1200 and 1202  in
      the Domain, and would indicate a forged response as the only event is the login
      to the service provider. Certificate export detection with event 1007, especially
      when the export is performed with the command line, is incriminating. Look for
      tools like Mimikatz and ADFSDump, which can be detected with Sysmon Event 18
      with pipe named ''"\microsoft##wid\tsql\query"''. '
    criticality: Emergency
    tlp: green
    link: Engines\documentation\wiki\Knowledge-GraphDetection-Models%F0%9F%9B%A1%EF%B8%8F-%5BCDM0004%5D-Detect-adversary-signed-SAML-Tokens
  - id: CDM0005
    name: Malicious ADFS trust modification
    description: 'Monitor creation of new ADFS trusts, by monitoring Windows Security
      Event Log on the ADFS server : "The Federation Service configuration was changed".
      This event can be correlated to relevant event 510 with the same Instance ID  for
      change details. There could be more than one 510 event per single 307 event.  These
      events should be reviewed, specifically searching for "Configuration: Type:
      IssuanceAuthority" where "Property Value" references an unfamiliar Domain. '
    criticality: Severe
    tlp: green
    link: Engines\documentation\wiki\Knowledge-GraphDetection-Models%F0%9F%9B%A1%EF%B8%8F-%5BCDM0005%5D-Malicious-ADFS-trust-modification
  - id: CDM0006
    name: Detect Abuse of trusted third-party services
    description: 'Monitor for communication from/to trusted cloud hosting plarforms
      (including things such as code repositories) to identify whether the content
      seems malicious -- command line execution, host modification, obfuscation etc.
      ; but also whether they are communicating to the hosting platform in ways that
      are similar to a C2 server. '
    criticality: Medium
    tlp: green
    link: Engines\documentation\wiki\Knowledge-GraphDetection-Models%F0%9F%9B%A1%EF%B8%8F-%5BCDM0006%5D-Detect-Abuse-of-trusted-third-party-services
  - id: CDM0007
    name: Detect malicious scripts hiding in registry
    description: 'Monitor for new registry keys added by processes and command-line
      arguments that contain scripts such as Visual Basic Scripts, JavaScript, Microsoft
      HTML scripts etc. Keep a repository of known keys used by adversaries, such
      as ones ending with ''\Software\Microsoft\Windows\ CurrentVersion\Run'' or ''\Software\Microsoft\Windows\CurrentVersion\RunOnce''. '
    criticality: High
    tlp: green
    link: Engines\documentation\wiki\Knowledge-GraphDetection-Models%F0%9F%9B%A1%EF%B8%8F-%5BCDM0007%5D-Detect-malicious-scripts-hiding-in-registry
  - id: CDM0008
    name: Detect malicious execution of rundll32
    description: 'Look for rundll32 execution , especially when called from another
      script. Monitor command line arguments to identify when malicious files are
      loaded with rundll32. Try to correlate DLL download followed immediately by
      a programmatic execution, which would indicate a multi-stage payload. Bear in
      mind that adversaries may rename the malicious DLL, for example with .sys extensions
      and hide in system paths, such as system32. '
    criticality: High
    tlp: green
    link: Engines\documentation\wiki\Knowledge-GraphDetection-Models%F0%9F%9B%A1%EF%B8%8F-%5BCDM0008%5D-Detect-malicious-execution-of-rundll32
  - id: CDM0009
    name: Compromised FaaS instances
    description: 'Monitor for functions that contain obfuscated and/or compiled code.
      Usually functions are closed within seconds of their triggering, and communicate
      with other services within AWS, meaning that long-running functions, with many
      connections to the outside need to be identified. Comparison with code repositories
      will also help to confirm whether a piece of code is supposed to be hosted in
      the cloud.  '
    criticality: Medium
    tlp: green
    link: Engines\documentation\wiki\Knowledge-GraphDetection-Models%F0%9F%9B%A1%EF%B8%8F-%5BCDM0009%5D-Compromised-FaaS-instances
  - id: CDM0010
    name: Signins from VPN Providers
    description: 'Detect sign-in or connection attempts from unknown VPN providers.
      Commercial VPN providers will publish their egress servers, which may be dynamically
      retrieved from their API or other intelligence listing regularly updated.  '
    criticality: Medium
    tlp: green
    link: Engines\documentation\wiki\Knowledge-GraphDetection-Models%F0%9F%9B%A1%EF%B8%8F-%5BCDM0010%5D-Signins-from-VPN-Providers
  - id: CDM0011
    name: EC2 Instances using IMDSv1
    description: 'Detection can be performed on logs using MetadataNoToken (Counts
      the number of times the Instance Metadata service was successfully access without
      a token (i.e., IMDSv1)). Other open sources tools may be used as well (Prowler
      Check 7.86, Metabadger or Cloudmapper). AWS CLI could also be used to list instances
      and filter on those using IMDSv1. Other AWS services may also be used to support,
      such as Security Hub or AWS Config, which can be setup to trigger alerts if
      IMDSv1 is present. '
    criticality: High
    tlp: green
    link: Engines\documentation\wiki\Knowledge-GraphDetection-Models%F0%9F%9B%A1%EF%B8%8F-%5BCDM0011%5D-EC2-Instances-using-IMDSv1
  - id: CDM0012
    name: EC2 Credential Exfiltration
    description: 'Identify when credentials exclusively used for an EC2 instance are
      being reused from another account. This scope may also be extended to identify
      when the credentials are trying to authenticate against different services that
      the role was not made to contact. IP addresses may also be used as a reference
      to check whether the API call is being initiated by another instance, reusing
      compromised credentials. Note that the scope of compromise can equally be within
      AWS or from the outside. '
    criticality: High
    tlp: green
    link: Engines\documentation\wiki\Knowledge-GraphDetection-Models%F0%9F%9B%A1%EF%B8%8F-%5BCDM0012%5D-EC2-Credential-Exfiltration
  - id: CDM0013
    name: External IMDS Requests
    description: 'IMDS is exposed through an API which can be queried only from the
      endpoint, but v1 will not authenticate  what is making the call, and it will
      be accessible directly. Identify, using a combination of network logs and API
      call logs, unusual patterns of access which may be indicative of IMDS being
      queried by another actor, especially when combined with other web application
      exploitation alerts.  '
    criticality: High
    tlp: green
    link: Engines\documentation\wiki\Knowledge-GraphDetection-Models%F0%9F%9B%A1%EF%B8%8F-%5BCDM0013%5D-External-IMDS-Requests
  - id: CDM0014
    name: Compromised cloud accounts
    description: 'Monitor for use of credentials at unusual times or to unusual systems
      or services. This may also correlate with other suspicious activity. Monitor
      for the usage of APIs that create or import SSH keys, particularly by unexpected
      users or accounts such as the root account. Take particular care for impossible
      travels, but since adversary may use VPNs to evade it (see TVM0021) also track
      access patterns to identify. '
    criticality: Severe
    tlp: green
    link: Engines\documentation\wiki\Knowledge-GraphDetection-Models%F0%9F%9B%A1%EF%B8%8F-%5BCDM0014%5D-Compromised-cloud-accounts
  - id: CDM0015
    name: Cloud network plane lateral movement
    description: 'Detect a high rate of unusual traffic flow from cloud instances
      to others and denied connections by the network security groups. Network reconnaissance
      techniques, such as port scanning, followed by connection attempts are likely
      conclusive of a lateral movement attempt in the network plane. Packet level
      inspection may improve remote service compromise attempts, and thus of attempt
      to move to another network location. Prioritize especially for movement from
      low to high security network planes, such as from a VPC to on premises.   '
    criticality: Medium
    tlp: green
    link: Engines\documentation\wiki\Knowledge-GraphDetection-Models%F0%9F%9B%A1%EF%B8%8F-%5BCDM0015%5D-Cloud-network-plane-lateral-movement
  - id: CDM0016
    name: Monitor Actions performed with recently assumed role
    description: 'Newly added role may be indicative of privilege escalation leading
      to a lateral movement to other resources, with the  newly aquired privileges.
      Monitor when critical actions; such as resource creation, deletion, and data
      read to important resources are performed with assumed role, on instances that
      typically don''t assume roles.  '
    criticality: High
    tlp: green
    link: Engines\documentation\wiki\Knowledge-GraphDetection-Models%F0%9F%9B%A1%EF%B8%8F-%5BCDM0016%5D-Monitor-Actions-performed-with-recently-assumed-role
  - id: CDM0017
    name: Monitor for Web Shell Attacks
    description: 'Several strategies might be used:  ## anomalies in the type of method
      Web Shell traffic will differentiate from usual traffic by the amount of POST
      requests, instead of the usual GET. Identify potentially malicious traffic by
      filtering web server access logs to look for the highest POST traffic and then
      search for calls to URLs that include one of the common web shell file types
      (.php, .asp, .aspx, .jsp).  ## POST requests to static files Monitoring POST
      request to images or other static files could be an indication  ## anomalies
      in the size of request and response important standard deviation on bytes sent/received
      by the server for a given file might be an indication of web shells  ##unusual
      traffic to a file monitoring new uri_path or change in the frequency of access
      to an aur_path might indicate that an attacker has injected a malicious file
      into a target web server''s directory and then try to execute that file from
      the web browser.  Host monitoring (file integretity checks) may still be useful
      to identify when a shell was uploaded to the web servers, and by monitoring
      for unusual and priviledged process spawning. '
    criticality: Medium
    tlp: green
    link: Engines\documentation\wiki\Knowledge-GraphDetection-Models%F0%9F%9B%A1%EF%B8%8F-%5BCDM0017%5D-Monitor-for-Web-Shell-Attacks
  - id: CDM0018
    name: Detect non-approved container image deployed
    description: 'Monitor (for example in Sysdig) for images being deployed that do
      not  originate from the approved container image repositories. Any image  deployed
      this way needs to be thoroughly investigated.  Monitor for known-bad file hashes
      (images) being downloaded, or being  downloaded from known-bad IPs or domains
      (including shell scripts) Monitor for executable scripts being downloaded to
      a container Always monitor for unusual authentications to all types of systems/apps
      Monitor for deployment of remote shells and outbound network connectivity '
    criticality: High
    tlp: clear
    link: Engines\documentation\wiki\Knowledge-GraphDetection-Models%F0%9F%9B%A1%EF%B8%8F-%5BCDM0018%5D-Detect-non-approved-container-image-deployed
  - id: CDM0019
    name: Detect Cryptominer running in container
    description: 'Detection of a cryptominer can be achieved in many ways - through
      monitoring  for the presence of known atomic IOCs such as file hashes or DNS
      lookups or  IP addresses. Correlate connection and domain resolution attempts
      with known  cryptominer pools hostnames, IPs and ports. Detect stratum protocol  (stratum+tcp
      or stratum2+tcp) used by cryptominer pools in process command line  and environment
      variables.  Other ways are to monitor system resources utilization for  extended
      peaks, as some cryptominers hog everything.   One of the best and easiest ways
      to detect crypto mining is through monitoring the network for suspicious activity.
      To mine a cryptocurrency, it is necessary to communicate, receive new hashes
      and calculate them then return them to the servers and put them in the correct
      wallet. '
    criticality: High
    tlp: clear
    link: Engines\documentation\wiki\Knowledge-GraphDetection-Models%F0%9F%9B%A1%EF%B8%8F-%5BCDM0019%5D-Detect-Cryptominer-running-in-container
  - id: CDM0020
    name: Changes in SSH authorized_key file
    description: 'The Secure Shell (SSH) authorized_keys file specifies  which users
      are allowed to log into a server using public  key authentication. Adversaries
      may modify it to maintain  persistence on a victim host by adding their own
      public keys. Can be created an event category rule that monitors for  changes
      in authorized_keys values in SSH settings.  Monitor executed commands, changes
      or any suspisious  processes to modify the authorized_keys or  /etc/ssh/sshd_config
      files. '
    criticality: Medium
    tlp: green
    link: Engines\documentation\wiki\Knowledge-GraphDetection-Models%F0%9F%9B%A1%EF%B8%8F-%5BCDM0020%5D-Changes-in-SSH-authorized_key-file
  - id: CDM0021
    name: Identify Emotet Trojan Artefacts
    description: 'Some registers in Windows can be scanned.  Possible scan tool: FRST
      scan The scanning tool have to research for the  following common IoCs that
      are related to  Emotet.  HKLM\SYSTEM\CURRENTCONTROLSET\SERVICES\1A345B7 HKLM\SYSTEM\CURRENTCONTROLSET\SERVICES\12C4567D  (Gornyk)
      C:\Windows\SysWOW64\servicedcom.exe C:\WINDOWS\12345678.EXE C:\WINDOWS\SYSWOW64\SERVERNV.EXE
      C:\WINDOWS\SYSWOW64\NUMB3R2ANDL3373RS.EXE C:\WINDOWS\TEMP\1A2B.TMP  One way
      to detect Emotet‚Äôs obfuscated code is to look for a PowerShell process executing
      commands that use the format operator -f to concatenate strings. To further
      refine the analytic, you can also look for the format indexes {0} and {1}. '
    criticality: High
    tlp: green
    link: Engines\documentation\wiki\Knowledge-GraphDetection-Models%F0%9F%9B%A1%EF%B8%8F-%5BCDM0021%5D-Identify-Emotet-Trojan-Artefacts
  - id: CDM0022
    name: Detection of IIS extensions quietly open persistent backdoors into servers
    description: 'The atacker is installing an IIS backdoor to use it as a covert  channel
      to drop malware through it. An adversary install a custom  IIS backdoor called
      FinanceSvcModel.dll in the folder  C:\inetpub\wwwroot\bin\. The backdoor had
      built-in capability to perform Exchange management  operations, such as enumerating
      installed mailbox accounts and exporting  mailboxes for exfiltration, as detailed
      below:    Path of the backdoor: "*.gif" Handler: System.Web.owa  Microsoft Defender
      Antivirus detections:  Backdoor:MSIL/SuspIISModule.G!gen Backdoor:MSIL/SuspIISModule.H!gen
      Backdoor:MSIL/SuspIISModule.K!gen Backdoor:MSIL/OWAStealer.B Backdoor:MSIL/OWAStealer.C
      Behavior:Win32/SuspGacInstall.B  Detection on EDR level: Suspicious IIS AppCmd
      Usage  Suspicious IIS module registration:  DeviceProcessEvents | where ProcessCommandLine
      has ‚Äúappcmd.exe add module‚Äù | where InitiatingProcessParentFileName == ‚Äúw3wp.exe‚Äù  DeviceProcessEvents
      | where InitiatingProcessFileName == ‚Äúpowershell.exe‚Äù |where ProcessCommandLine
      has ‚Äù system.enterpriseservices.internal.publish‚Äù | where InitiatingProcessParentFileName
      == ‚Äúw3wp.exe‚Äù   DeviceProcessEvents |where ProcessCommandLine has ‚Äù \\gacutil.exe
      /I‚Äù | where InitiatingProcessParentFileName == ‚Äúw3wp.exe‚Äù  Indicators of compromise
      HttpCompress.dll   4446f5fce13dd376ebcad8a78f057c0662880fdff7fe2b51706cb5a2253aa569  HttpSessionModule.dll
      1d5681ff4e2bc0134981e1c62ce70506eb0b6619c27ae384552fe3bdc904205c  RewriterHttpModule.dll
      c5c39dd5c3c3253fffdd8fee796be3a9361f4bfa1e0341f021fba3dafcab9739  Microsoft.Exchange.HttpProxy.HttpUtilities.dll
      d820059577dde23e99d11056265e0abf626db9937fc56afde9b75223bf309eb0  HttpManageMoudle.dll
      95721eedcf165cd74607f8a339d395b1234ff930408a46c37fa7822ddddceb80  IIS_backdoor.dll
      e352ebd81a0d50da9b7148cf14897d66fd894e88eda53e897baa77b3cc21bd8a  FinanceSvcModel.dll
      5da41d312f1b4068afabb87e40ad6de211fa59513deb4b94148c0abde5ee3bd5  App_Web_system_web.ashx.dll
      290f8c0ce754078e27be3ed2ee6eff95c4e10b71690e25bbcf452481a4e09b9d  App_Web_error.ashx.dll
      2996064437621bfecd159a3f71166e8c6468225e1c0189238068118deeabaa3d '
    criticality: High
    tlp: green
    link: Engines\documentation\wiki\Knowledge-GraphDetection-Models%F0%9F%9B%A1%EF%B8%8F-%5BCDM0022%5D-Detection-of-IIS-extensions-quietly-open-persistent-backdoors-into-servers
  - id: CDM0023
    name: SQL Commands in Web Request
    description: 'HTTP transaction would contain URL-encoded SQL fragments, corresponding
      to a query being done on the frontend. Encoding non-ASCII characters into the
      URL ensures that the HTTP request successfully crosses the internet. When the
      HTTP request arrives at the web server, the web application decodes the URL
      and processes the data.  By searching known malicious patterns of SQL statements,
      for example : ''UNION all SELECT encoded into %27%20UNION%20ALL%20SELECT , SQL
      injection may be revealed. '
    criticality: Severe
    tlp: green
    link: Engines\documentation\wiki\Knowledge-GraphDetection-Models%F0%9F%9B%A1%EF%B8%8F-%5BCDM0023%5D-SQL-Commands-in-Web-Request
  - id: CDM0024
    name: Detect Suspicious Redirections in URL
    description: '2023-05-01 This detction objective is cancelled.   Within EC this
      vulnerability is assessed (DIGIT S1 SA) low and will be handled under DIGIT
      S1 vulnerability management service.  Search for redirection and forward events
      keywords in the URL of web queries captured at the network level, which redirect
      to another website (since website often redirect users to another part of the
      website).  For example, detect a url query parameter in the url itself : http://example.com/example.php?url=http://malicious.example.com
      and parse the followup string to get the domain name. Other keywords include
      ?returnUrl, #https:// , ?fwd= ...  It is also possible to build a regex search
      which looks for domain name in every URL and then compares to the domain name
      of the application. Regex needs to be loose enough in case of C2 domains which
      may be randomized and unusual.  Narrow down searches to internal, sensitive
      URLs of web applications and avoid general aspecific traffic to the internet
      which may contain many expected redirections across many websites. '
    criticality: Low
    tlp: green
    link: Engines\documentation\wiki\Knowledge-GraphDetection-Models%F0%9F%9B%A1%EF%B8%8F-%5BCDM0024%5D-Detect-Suspicious-Redirections-in-URL
  - id: CDM0025
    name: Identify Path Traversal in Web Requests
    description: 'Analyze and alert on URLs containing "dot-dot-slash" sequences,
      or absolute path to critical resources.  "../" or "..\" sequences are often
      percent encodded, and even double encoded (see : https://owasp.org/www-community/Double_Encoding),
      for example "..\" may be represented as "%2e%2e%5c", "%252e%252e%255c" or "..%255c".
      As such, build searches which return  successions of dot, dot and back or forward
      slash, including all subvariations of URL encoding and double encoding.  Path
      traversal queries may not always contain dot-dot-slash sequences, for example
      : http://some_site.com.br/get-files?file=/etc/passwd. in that case, build a
      lookup of directories which should not be in userspace , for example /opt or
      /etc in *NIX OS, /windows for Windows server etc. '
    criticality: Medium
    tlp: green
    link: Engines\documentation\wiki\Knowledge-GraphDetection-Models%F0%9F%9B%A1%EF%B8%8F-%5BCDM0025%5D-Identify-Path-Traversal-in-Web-Requests
  - id: CDM0026
    name: Detect Confluence RCE (CVE-2021-26084)
    description: 'To detect exploitation, you should monitor all HTTP traffic requests
      where the path component of the request-URI contains one of the strings in the
      ‚ÄúURI path‚Äù column of the following table:   https://gist.github.com/zdi-team/acaee69c9c5bcbdc4ce590fcdb6170b5#file-cve-2021-26084-snippet-7-console  If
      such a request is found, you should inspect the HTTP request method. If the
      request method is POST, look for the respective vulnerable parameters from the
      table above in the body of the HTTP request, and if the request method is GET,
      you should look for the parameters in the request-URI of the HTTP request. Check
      to see if the value of any of the vulnerable parameters contains the string
      "\u0027" or its URL-encoded form. If so, the traffic should be considered malicious
      and an attack exploiting this vulnerability is likely underway. '
    criticality: High
    tlp: green
    link: Engines\documentation\wiki\Knowledge-GraphDetection-Models%F0%9F%9B%A1%EF%B8%8F-%5BCDM0026%5D-Detect-Confluence-RCE-%28CVE-2021-26084%29
  - id: CDM0027
    name: Detect Abnormal Traffic to Web Servers
    description: 'Identify clients generating large amount of HTTP errors, POST requests,
      protocol used, request headers and particularly for unusual clients : uncommon
      IP ranges, host names, OS, user agent etc.  Monitoring average traffic volumes
      and alerting if it deviates from expectation may also be particularly relevant,
      for example to identify DDoS types of attacks or data exfiltration. '
    criticality: Medium
    tlp: green
    link: Engines\documentation\wiki\Knowledge-GraphDetection-Models%F0%9F%9B%A1%EF%B8%8F-%5BCDM0027%5D-Detect-Abnormal-Traffic-to-Web-Servers
  - id: CDM0028
    name: Monitor Web Vulnerability Scanner Behaviours
    description: 'Common scanners can be identified by their user agents, which will
      mention in some string a recurring name, often belonging to a certain tool.
      Lists, such as https://github.com/mitchellkrogza/nginx-ultimate-bad-bot-blocker/blob/master/_generator_lists/bad-user-agents.list
      have been compiled with hundreds of signatures, allowing to build rules for
      known scanners. Similarly, threat intelligence can be used to compile IoCs of
      known domain names or IPs used as scanning endpoints. However, this may be fooled
      if the adversary modifies the user agent used by the scanner.  More complex
      detection approaches should complement signature based detection for modified
      open source scanners and other custom tools by focusing on common behaviours:
      detect when a client is crawling through the website (high frequency of successfull
      queries and/or http errors), making high amount of transactions and generating
      traffic,  while sending odd, malformed or obfuscated requests especially if
      they correspond to other malicious attacks. '
    criticality: Medium
    tlp: amber
    link: Engines\documentation\wiki\Knowledge-GraphDetection-Models%F0%9F%9B%A1%EF%B8%8F-%5BCDM0028%5D-Monitor-Web-Vulnerability-Scanner-Behaviours
  - id: CDM0029
    name: Obfuscated Query String in Web Request
    description: 'Analyze if URL query string parameters contains distinct signs of
      obfuscation in order to thwart attack detection. Typical things to look for
      are large base64 strings, ...CHAR(n)+CHAR(n)... string used in SQL injections,
      successions of html, hex, octal or unicode escaped characters (\144 is "a" in
      octal for example) and any combination of them.  A useful general approach is
      to embed a tranformation steps for the logs, where they''d be automatically
      decoded as well, allowing other rules to perform detection.  Be careful for
      leading zeros, for example the html encoding &#000000000058; can escape the
      filter for ":" , which is used by a number of attacks, and can throw off the
      filter if it''s not taking leading zeros in consideration.  Percent encoding
      is common, and web detections should percent decode by default, but since some
      web servers perform two round of decoding, some adversaries encode twice to
      evade detection and still have their query being read by the target. Alongside
      single encoding detection for percent encoded attacks, have a general rule for
      double encoded queries which are almost always malicious. You can also embed
      an  automation to double decode all logs, use both approaches to weigh in the
      threat criticality. '
    criticality: Medium
    tlp: green
    link: Engines\documentation\wiki\Knowledge-GraphDetection-Models%F0%9F%9B%A1%EF%B8%8F-%5BCDM0029%5D-Obfuscated-Query-String-in-Web-Request
  - id: CDM0030
    name: Suspicious Requests URL
    description: 'Certain part of the webservers should typically not be attempted
      to be reached by web clients.  Create a blocklist of administrative endpoints
      (/admin/index.php...), system keywords (conf, admin, localhost, console, webmin,
      php my admin...), that are typically reserved only for adminstrators, and alert
      on unexpected access to these resources.  '
    criticality: Medium
    tlp: green
    link: Engines\documentation\wiki\Knowledge-GraphDetection-Models%F0%9F%9B%A1%EF%B8%8F-%5BCDM0030%5D-Suspicious-Requests-URL
  - id: CDM0031
    name: Detect brute-force attacks against EULOGIN IdP
    description: 'Identify clients generating large amount of failed EULOGIN login
      requests followed or not by a successful login. Detects successful/unsuccessful
      horizontal brute forces. Detects slow, successful/unsuccessful horizontal brute
      forces. Detects slow, successful/unsuccessful vertical bruteforces. Detects
      successful/unsuccessful vertical bruteforces '
    criticality: High
    tlp: green
    link: Engines\documentation\wiki\Knowledge-GraphDetection-Models%F0%9F%9B%A1%EF%B8%8F-%5BCDM0031%5D-Detect-brute-force-attacks-against-EULOGIN-IdP
  - id: CDM0032
    name: (CVE-2020-0688) Confluence VIEWSTATE query parameter
    description: 'As highlighted in TVM0054, a number of pages are targeted and the
      URL will contain the serialized payload. As a result, alert for queries on the
      /ecp/ root that contain a __VIEWSTATE query parameter followed by a large variable.
      __VIEWSTATE should never be part of a GET request and should be alerted when
      that''s the case. '
    criticality: High
    tlp: green
    link: Engines\documentation\wiki\Knowledge-GraphDetection-Models%F0%9F%9B%A1%EF%B8%8F-%5BCDM0032%5D-%28CVE-2020-0688%29-Confluence-VIEWSTATE-query-parameter
  - id: CDM0033
    name: XSS Payload in Web Request
    description: 'Adversaries will likely attempt multiple XSS injection to evade
      the different sanitization filters. They will likely combine different encoding
      strategies as described in CDM0030 . Focus on building a blocklist of known
      keywords indicative of an injection, such as <script>...</script> , ...="javascript:...",
      alongside a large lookup of publicly available XSS vectors, likely to be used
      by scanners and opportunistic assaillants. There are many of these lists available
      in different places, such as : https://gist.github.com/kurobeats/9a613c9ab68914312cbb415134795b45,
      and should be combined in one. It''s particularly relevant for web scanners,
      depending on how custom they are they might try to trigger the alert popup to
      feedback to the adversary if the XSS injection is possible and with which escape,
      before they add in their own script.  '
    criticality: Medium
    tlp: green
    link: Engines\documentation\wiki\Knowledge-GraphDetection-Models%F0%9F%9B%A1%EF%B8%8F-%5BCDM0033%5D-XSS-Payload-in-Web-Request
  - id: CDM0034
    name: Detect creation of a new AWS Amplify website
    description: 'Any SOC will have to react to the creation of any amplify site,
      in order to  determine whether or not a valid business purpose or threat actor
      Activity lies behind the Amplify creation. It''s advised to use email automation
      to inquire from registered contacts whether or not an actual business purpose
      or action was behind with a 24 or 48 deadline to react in case it was not,  and
      in case no valid business action/purpose can be identified, treat the  event/alert
      as a potential incident. '
    criticality: Low
    tlp: amber+strict
    link: Engines\documentation\wiki\Knowledge-GraphDetection-Models%F0%9F%9B%A1%EF%B8%8F-%5BCDM0034%5D-Detect-creation-of-a-new-AWS-Amplify-website
  - id: CDM0035
    name: Detect changes to existing AWS Amplify website
    description: 'Any SOC will have to react to the modification of any amplify site,
      in order to  determine whether or not a valid business purpose or threat actor
      Activity lies behind the Amplify creation. It''s advised to use email automation
      to inquire of registered contacts whether or not an actual business purpose
      or action was behind with a 24 or 48 deadline to react in case it was not,  and
      in case no valid business action/purpose can be identified, treat the  event/alert
      as a potential incident. Of course a 24/48 window would enable a threat actor
      to fully complete the attempted exfiltration, but very few SOCs will have the
      mandate to block a website if no approved pre-release ticket  exists. If a SOC
      has the mandate to restrict all access to the Amplify website following a change
      until analyzed, this would be more secure. '
    criticality: Low
    tlp: clear
    link: Engines\documentation\wiki\Knowledge-GraphDetection-Models%F0%9F%9B%A1%EF%B8%8F-%5BCDM0035%5D-Detect-changes-to-existing-AWS-Amplify-website
  - id: CDM0036
    name: Monitor User and Machine Active Directory Certificate Enrollments
    description: 'From a blueteam perspective, several behaviors can be detected when  exploiting
      such attack path.  In addition, the interaction with the ADCS instance could
      be an interesting  way to detect Masky execution. The Certified Pre-Owned article
      describes  detection and preventive actions that could be applied on ADCS environment.  From
      the listed detection methods, the one referenced DETECT1 recommends to  monitor
      the users‚Äô certificates enrollement via the Event ID 4886  (‚ÄúCertificate Services
      received a certificate request‚Äù) and their approval  via the Event ID 4887 (‚ÄúCertificate
      Services approved a certificate request  and issued a certificate‚Äù).   Source:
      see references  https://z4ksec.github.io/posts/masky-release-v0.0.3/#detection-vectors '
    criticality: Medium
    tlp: clear
    link: Engines\documentation\wiki\Knowledge-GraphDetection-Models%F0%9F%9B%A1%EF%B8%8F-%5BCDM0036%5D-Monitor-User-and-Machine-Active-Directory-Certificate-Enrollments
  - id: CDM0037
    name: CrackMapExec related artifacts on endpoints
    description: 'For this detection, it''s the goal to detect the presence of known
      hashes,  file names and download links for CrackMapExec(CME) and all of it''s  modules.
      Find modules:  https://wiki.porchetta.industries/getting-started/using-modules
      Detect the presence of known hashes,  file names and download links for CrackMapExec(CME)
      and all of it''s  modules. A lookup or watchlist will need to be created to
      store related artifacts. It is preferable to involve threat intelligence to
      validate if this process could be automated, as hash values would change frequently,
      and download location may change.  Find modules:  https://wiki.porchetta.industries/getting-started/using-modules
      https://pypi.org/project/crackmapexec/   Detection can occur during download
      when/if possible or upon detection of hashes, file names or relevant file meta
      data on disk. '
    criticality: High
    tlp: clear
    link: Engines\documentation\wiki\Knowledge-GraphDetection-Models%F0%9F%9B%A1%EF%B8%8F-%5BCDM0037%5D-CrackMapExec-related-artifacts-on-endpoints
  - id: CDM0038
    name: Traffic to customervoice.microsoft.com
    description: 'Any outbound traffic to, or DNS requests looking up the subdomain
      of  Microsoft in question, customervoice.microsoft.com, can potentially be  an
      indicator of someone clicking on a phishing link in email or sent via other
      services to a user.   Useful artifacts to support rule creation:   - Endpoint
      HTTP Proxy   - Windows Netconn API   - HTTP Request Code 200   - HTTP Request
      code 302 '
    criticality: Low
    tlp: clear
    link: Engines\documentation\wiki\Knowledge-GraphDetection-Models%F0%9F%9B%A1%EF%B8%8F-%5BCDM0038%5D-Traffic-to-customervoice.microsoft.com
  - id: CDM0039
    name: Accepted AWS VPC peering requests
    description: 'A VPC peering request is a request to connect one network (subnet)
      to  another on either specific IP to IP and specific port to port, but it can  also
      be much wider than that, opening all ports on all IP addresses between two networks.  VPC
      peering requests originating from inside own organization are expected but they
      are expected to be rare. Requests originating from outside own organization
      will be even rarer. However, the requests are harmless, unless they are accepted
      by the VPC administrator within own AWS account/VPC. Any  accepted VPC peering
      should be followed up by automation to ensure that the  operational team behind
      the VPC peering acceptance meant to accept this  peering and that this is not
      an illicit peering acceptance. '
    criticality: Medium
    tlp: clear
    link: Engines\documentation\wiki\Knowledge-GraphDetection-Models%F0%9F%9B%A1%EF%B8%8F-%5BCDM0039%5D-Accepted-AWS-VPC-peering-requests
  - id: CDM0040
    name: Detect running container images with exploitable vulnerabilities
    description: 'Use runtime scanner to analyze running container images to provide
      full security coverage  for Kubernetes clusters and Docker hosts as scanning
      just registries may not catch containers deployed from other sources. '
    criticality: Medium
    tlp: clear
    link: Engines\documentation\wiki\Knowledge-GraphDetection-Models%F0%9F%9B%A1%EF%B8%8F-%5BCDM0040%5D-Detect-running-container-images-with-exploitable-vulnerabilities
  - id: CDM0041
    name: Windows environment lateral movement via SMB protocol
    description: 'Example guidelines found below. This is not necessarily the only
      way to achieve remote code execution via SMB. Add further guidelines as  needed,
      when/as relevant.  Source for below guidelines:  https://z4ksec.github.io/posts/masky-release-v0.0.3/#detection-vectors
      First of all, Masky heavily relies on the SMB protocol to execute remote  code
      on the target, but also to deploy the agent and retrieves the results.  Offensive
      tools relying on this protocol typically interact with three  shares: C$, ADMIN$
      and IPC$. Wherever the C$ and ADMIN$ shares are mounted  as local administrator
      and are used to push or retrieve files, the IPC$ is  related to the usage of
      named pipes exposed by the remote system. It  basically allows to interact with
      the features exposed on the target  through legitimate protocols. Indeed, the
      DCERPC protocol allows, as it  names suggest, to call remote procedures allowing
      for example to create  services (via \pipe\svcctl) or scheduled tasks (via \pipe\atsvc).
      I  strongly recommend diving into Impacket source code and especially their  example
      scripts to understand how it works (smbexec.py, atexec.py, etc.).  From this
      information, the following Windows event log IDs can be  collected on your SIEM
      to create detection rules for such remote code  execution over SMB:  4698: A
      schedule task was created; 4699: A schedule task was deleted; 4702: A schedule
      task was updated; 7045: A new service was created; 5145: A network share object
      (file or folder) was accessed.  The use of service or schedule tasks in a short
      period of time (e.g.  creation, modification or deletion) could be an interesting
      weak signal to correlate with administrative shares interactions (C$ / ADMIN$),
      as well as the IPC$ special share. Indeed, this could be a sign of the use of
      such lateral movement techniques. False positives can occur based on these rules
      depending on the administration tools used through the  corporate LAN (e.g.
      PSEXEC). To go deeper in such detection, rules can be combined to identify the
      spawning of suspicious lolbins, unsigned  binaries or commonly executed recognition
      commands (e.g. whoami, net  user, etc.) from the process tree of the schtasks.exe
      (schedule tasks)  or winexesvc.exe (services) processes. '
    criticality: High
    tlp: clear
    link: Engines\documentation\wiki\Knowledge-GraphDetection-Models%F0%9F%9B%A1%EF%B8%8F-%5BCDM0041%5D-Windows-environment-lateral-movement-via-SMB-protocol
  - id: CDM0042
    name: Sentinel connector impaired
    description: 'Any true positive of an alert from a MDR built from this CDM would
      mean that an attacker has control of credentials/service principal required
      to  disconnect, delete or update a sentinel connector.   Detections should utilize
      the SentinelHealth table and catch all of the  actions ''delete'' ''disconnect''
      ''update''.  Search example for this provided: let lastestStatus = SentinelHealth
      where TimeGenerated > ago(5m) where OperationName == ''Data fetch status change''
      where Status in (''Success'', ''Failure'') project TimeGenerated, SentinelResourceName,
      SentinelResourceId, LastStatus = Status summarize TimeGenerated = arg_max(TimeGenerated,*)
      by SentinelResourceName, SentinelResourceId; let nextToLastestStatus = SentinelHealth
      | where TimeGenerated > ago(5m) | where OperationName == ''Data fetch status
      change'' | where Status in (''Success'', ''Failure'') | join kind = leftanti
      (lastestStatus) on SentinelResourceName, SentinelResourceId, TimeGenerated |
      project TimeGenerated, SentinelResourceName, SentinelResourceId, NextToLastStatus
      = Status | summarize TimeGenerated = arg_max(TimeGenerated,*) by SentinelResourceName,
      SentinelResourceId;   lastestStatus | join kind=inner (nextToLastestStatus)
      on SentinelResourceName, SentinelResourceId | where NextToLastStatus == ''Success''
      and LastStatus == ''Failure''  another example provided: AzureActivity | where
      OperationNameValue contains "MICROSOFT.SECURITYINSIGHTS/DATACONNECTORS/DISCONNECT/ACTION"  or
      OperationNameValue contains "MICROSOFT.SECURITYINSIGHTS/DATACONNECTORS/DELETE/ACTION"  or
      OperationNameValue contains "MICROSOFT.SECURITYINSIGHTS/DATACONNECTORS/UPDATE/ACTION"  and
      for custom sentinel connectors separate searches in the tables of the  custom
      connectors are needed: Custom_Connector_table_name | where TimeGenerated > ago(45m)
      where 45m is the interval with which you receive log data for a specific  custom
      connector '
    criticality: High
    tlp: clear
    link: Engines\documentation\wiki\Knowledge-GraphDetection-Models%F0%9F%9B%A1%EF%B8%8F-%5BCDM0042%5D-Sentinel-connector-impaired
  - id: CDM0043
    name: Detection for duplication of access token in a new process to elevate privileges
    description: 'Threat actors can create a new access token with the duplication
      token function DuplicateToken(Ex) and after that to use another function -  ''CreateProcessWithTokenW''
      to create a new process running under the security context of a different user.
      This technique is used for impersonation purposes.  The function CreateProcessWithTokenW
      is related to the process winbase.h The process that calls CreateProcessWithTokenW
      must have the SE_IMPERSONATE_NAME  privilege.  The following code can be used
      to steal the token with open of a new process: #include "stdafx.h"#include #include
      int main(int argc, char * argv[]) {char a;HANDLE processHandle;HANDLE tokenHandle
      = NULL;HANDLE duplicateTokenHandle = NULL;STARTUPINFO startupInfo;PROCESS_INFORMATION
      processInformation;DWORD PID_TO_IMPERSONATE = 3060;wchar_t cmdline[] = L"C:\\shell.cmd";ZeroMemory(&startupInfo,
      sizeof(STARTUPINFO));ZeroMemory(&processInformation, sizeof(PROCESS_INFORMATION));startupInfo.cb
      = sizeof(STARTUPINFO);        processHandle = OpenProcess(PROCESS_ALL_ACCESS,
      true, PID_TO_IMPERSONATE);OpenProcessToken(processHandle, TOKEN_ALL_ACCESS,
      &tokenHandle);DuplicateTokenEx(tokenHandle, TOKEN_ALL_ACCESS, NULL, SecurityImpersonation,
      TokenPrimary, &duplicateTokenHandle);                        CreateProcessWithTokenW(duplicateTokenHandle,
      LOGON_WITH_PROFILE, NULL, cmdline, 0, NULL, NULL, &startupInfo, &processInformation);std::cin
      >> a;    return 0;}   Detection objectives:   Create a rule to monitor if the
      following API calls are executed:  - OpenProcess() - OpenProcessToken() - ImpersonateLoggedOnUser()
      - DuplicateTokenEx() - CreateProcessWithTokenW()  Monitor for running CreateProcessAsUser
      or CreateProcessWithLogonW functions.  Monitor for executed processes (for example
      winbase.h) that may modify access  tokens to operate under a different user
      or system security context to perform  actions and bypass access controls.  Monitor
      for executed process like securitybaseapi.h which is related to the  function
      DuplicateTokenEx and can craete a new access token.  Detection objectives based
      on SACL bypass, manipulated with NtObjectManager.  NtObjectManager is a module
      in PowerShell that can access NT object manager  namespace and can be installed
      with Install-Module option. The detection is able to get alerts when winlogon.exe
      is accessed with specific access rights defined in SACL (Security Access Control
      List)  auditpol /set /category:"Object Access" /success:enable /failure:enable
      $p = Get-NtProcess -name winlogon.exe -Access GenericAll,AccessSystemSecurity
      Set-NtSecurityDescriptor $p ‚ÄúS:(AU;SAFA;0x1400;;;WD)‚Äù Sacl  To steal an access
      token from a SYSTEM process the BUILTIN\Administrator  must be the TokenOwner
      to perform OpenProcessToken() for a process.  Monitor for OpenProcess() with
      the PROCESS_QUERY_LIMITED_INFORMATION  access right against SYSTEM processes
      protected by Protected Process Light (PPL)  If (Event ID) 4656 (Task category:
      Kernal Object) is gerenated this may indicate  the process that request access
      and access rights requested. This potentially could be an indicator for process
      query information. '
    criticality: High
    tlp: clear
    link: Engines\documentation\wiki\Knowledge-GraphDetection-Models%F0%9F%9B%A1%EF%B8%8F-%5BCDM0043%5D-Detection-for-duplication-of-access-token-in-a-new-process-to-elevate-privileges
  - id: CDM0044
    name: Azure Microsoft.GuestConfiguration resource provider registration
    description: 'An Azure resource provider is a collection of REST operations that
      provide  functionality for an Azure service. For example, the Key Vault service  consists
      of a resource provider named Microsoft.KeyVault. The resource  provider defines
      REST operations for working with vaults, secrets, keys,  and certificates. (Source:
      Microsoft link in references).   The Microsoft.GuestConfiguration resource provider
      is a pre-requisite for  the steps needed to implementing persistence using the
      Azure Microsoft Policy remediations, see the cloudbrothers.info reference.   When
      Azure Defender for Cloud is in use, the Microsoft.GuestConfiguration  resource
      provider is automatically registered, in which case the detection  will not
      be very useful. When Azure Defender for Cloud is not in place, a  detection
      for this CDM can yield information that a threat actor is  pursuing persistence,
      but can also be false positive prone, as example due  to activation of Azure
      Defender for Cloud.   Any automation involving democratization of security,
      such as emails or  social media messages to involved users need to contain enough
      context to explain clearly which actions taken by a user could have led to  registration
      of the Microsoft.GuestConfiguration resource provider. '
    criticality: Medium
    tlp: clear
    link: Engines\documentation\wiki\Knowledge-GraphDetection-Models%F0%9F%9B%A1%EF%B8%8F-%5BCDM0044%5D-Azure-Microsoft.GuestConfiguration-resource-provider-registration
  - id: CDM0045
    name: Detection of Linux kernel module loading
    description: 'Monitor the Linux host for kernel module load attempts by monitoring
      insmod command execution or processes using init_module syscall. By default
      Linux  system does not log module load events. Auditing needs to be performed
      by  external tool like auditd. Detectecion can be performed with Falco or  Tracee. '
    criticality: High
    tlp: clear
    link: Engines\documentation\wiki\Knowledge-GraphDetection-Models%F0%9F%9B%A1%EF%B8%8F-%5BCDM0045%5D-Detection-of-Linux-kernel-module-loading
  - id: CDM0046
    name: VPC peering requests received from inside own AWS organization
    description: 'A VPC peering request is a request to connect one network (subnet)
      to  another on either specific IP to IP and specific port to port, but it can  also
      be much wider than that, opening all ports on all IP addresses between two networks.  VPC
      peering requests originating from inside own organization are expected but they
      are expected to be rare. Each such request should be tracked down  with the
      operational team behind using automation to ask for confirmation  that the VPC
      peering request was expected behaviour and is not malicious. '
    criticality: Low
    tlp: clear
    link: Engines\documentation\wiki\Knowledge-GraphDetection-Models%F0%9F%9B%A1%EF%B8%8F-%5BCDM0046%5D-VPC-peering-requests-received-from-inside-own-AWS-organization
  - id: CDM0047
    name: Detect Container Breakout Exploit via runc vulnerablity
    description: 'Detect linking and writing to /proc/self/exe '
    criticality: High
    tlp: clear
    link: Engines\documentation\wiki\Knowledge-GraphDetection-Models%F0%9F%9B%A1%EF%B8%8F-%5BCDM0047%5D-Detect-Container-Breakout-Exploit-via-runc-vulnerablity
  - id: CDM0048
    name: Detect secrets embedded in container images
    description: 'Detection may be possible by using a regular expression engine with
      set of  rules to detect credentials and sensitive configuration data embedded
      into  container images.   Perform scans on images in CI/CD pipelines, on source
      code repositories,  container registries and on running containers.  '
    criticality: High
    tlp: clear
    link: Engines\documentation\wiki\Knowledge-GraphDetection-Models%F0%9F%9B%A1%EF%B8%8F-%5BCDM0048%5D-Detect-secrets-embedded-in-container-images
  - id: CDM0049
    name: Public AWS S3 bucket
    description: 'Detect changes to S3 buckets that make either files or whole buckets
      publicly accessible.  Detections should catch buckets that my accidentally be
      exposed online using for example canary tokens.  Additionally, all buckets within
      an AWS organization should be continuously scanned to detect publicly accessible
      buckets and files. '
    criticality: High
    tlp: clear
    link: Engines\documentation\wiki\Knowledge-GraphDetection-Models%F0%9F%9B%A1%EF%B8%8F-%5BCDM0049%5D-Public-AWS-S3-bucket
  - id: CDM0050
    name: DNS activity related to potential malicious server
    description: 'The objective is 2-fold: - To detect a DNS resolution from a server
      for a new FQDN not seen before from that server or at coporate level. This could
      be a  sign for example of drive-by-download when followed by few TCP or UDP  requests
      or command&control traffic when regular traffic occurs over time between internal
      server and external resource.   - To detect a series of DNS queries that could
      be a sign of tunneling command&control (beaconing) or exfiltration over DNS.  Detection
      on DNS resolution might be a weak signal that would need to be cross-correlated
      with information from passive DNS databases (age of the hostname, resolved IPs)
      and the reputation of both hostnames and IPs  (MISP, virustotal, RiskIQ) '
    criticality: High
    tlp: green
    link: Engines\documentation\wiki\Knowledge-GraphDetection-Models%F0%9F%9B%A1%EF%B8%8F-%5BCDM0050%5D-DNS-activity-related-to-potential-malicious-server
  - id: CDM0051
    name: TCP or UDP outbound traffic to an unusual destination or port
    description: 'The objective is to detect outbound connection attempts from servers
      to  unusual external resources or on unusual port .  Check any outbound connection
      attempts (src ports > 1024)  and destination port is unique for the destination
      IPs over the attempts '
    criticality: High
    tlp: green
    link: Engines\documentation\wiki\Knowledge-GraphDetection-Models%F0%9F%9B%A1%EF%B8%8F-%5BCDM0051%5D-TCP-or-UDP-outbound-traffic-to-an-unusual-destination-or-port
  - id: CDM0052
    name: Customervoice.microsoft.com link in email or other message history
    description: 'Any email or messaging history mentioning in any way the subdomain  customervoice.microsoft.com
      can be an indicator that a phishing campaign is ongoing, and could lead to IOCs
      that could result in new proxy blocks, or  new detections being built.   '
    criticality: Low
    tlp: clear
    link: Engines\documentation\wiki\Knowledge-GraphDetection-Models%F0%9F%9B%A1%EF%B8%8F-%5BCDM0052%5D-Customervoice.microsoft.com-link-in-email-or-other-message-history
  - id: CDM0053
    name: Honeytoken accessed from private AWS S3 bucket
    description: 'The goal of this detection objective is to use honeytokens to detect  abnormal
      activity in AWS S3 buckets.   Several types of honeytokens can be deployed into
      S3 buckets, as example using the Thinkst Canary canary.tools service:  One option
      is to set up honeytokens and upload on the bucket  embedded in a word file as
      a macro, or as credentials in a kubeconfig file, or a script containing a fake
      AWS key, and then wait for an attacker to open  the uploaded file or try to
      use the discovered ''AWS credential'' to see what  can access.  Another option
      is to use a honeytoken that will alert even on someone listing a booby-trapped
      file in an S3 bucket.  Monitor for at least these 2 honeytoken alerts, but others
      can be valid also/instead  depending on your implementation: 1. An AWS API Key
      Canarytoken was triggered by 2. A MS Word Document Canarytoken was triggered
      by '
    criticality: High
    tlp: clear
    link: Engines\documentation\wiki\Knowledge-GraphDetection-Models%F0%9F%9B%A1%EF%B8%8F-%5BCDM0053%5D-Honeytoken-accessed-from-private-AWS-S3-bucket
  - id: CDM0054
    name: Azure infrastructure modifications to a different resource group
    description: 'Azure CLI has a wide reach, and can be used from any deployed compute
      resource in Azure. In general, it would be expected that operational teams use
      the Azure CLI to perform tasks within a relevant resource group in  Azure, whereas
      activities performed between resource groups can be an  indicator of abnormal
      behaviour.   becomes available. Until then, the goal is to detect any change
      done from  the Azure CLI into another resource group.   As part of building
      detections, it is important to retrosearch in order to  baseline any already-existing
      false positives.  '
    criticality: High
    tlp: clear
    link: Engines\documentation\wiki\Knowledge-GraphDetection-Models%F0%9F%9B%A1%EF%B8%8F-%5BCDM0054%5D-Azure-infrastructure-modifications-to-a-different-resource-group
  - id: CDM0055
    name: Changes in Azure to Microsoft Policy Remediations
    description: 'Detection of threat actor persistence efforts through Azure Automated  Machine
      Configurations can be done by detecting any changes to Azure Policy that implements
      remediations.  Remediations can be deployed either on a resource group or for
      single VMs,  or any combinations of resource groups and machines as detailed
      in the  Azure Policy scope.  Any deployed remediation will need to be investigated
      with the teams  involved.  '
    criticality: High
    tlp: clear
    link: Engines\documentation\wiki\Knowledge-GraphDetection-Models%F0%9F%9B%A1%EF%B8%8F-%5BCDM0055%5D-Changes-in-Azure-to-Microsoft-Policy-Remediations
  - id: CDM0056
    name: Detect protocol DDoS
    description: 'Protocol attacks look to exhaust resources of a server or those
      of its  networking systems like firewalls, routing engines, or load-balancers.
      An example of a protocol attack is the SYN flood attack.Before two  computers
      can initiate a secure communication channel,they must perform a TCP handshake.A
      TCP handshake is a means for two parties to exchange  preliminary information.
      A SYN packet is typicall the first step of the TCP handshake, indicating to
      the server that the  client wants to start a new channel. In a SYN flood attack,
      the attacker floods the server with numerous SYN packets, each containing spoofed
      IP addresses. The server responds to each packet (via SYN-ACKs), requesting
      the client to complete the handshake.However,  the client(s) never respond,
      and the server keeps waiting. Eventually, it crashes after waiting too long
      for too many responses. '
    criticality: High
    tlp: clear
    link: Engines\documentation\wiki\Knowledge-GraphDetection-Models%F0%9F%9B%A1%EF%B8%8F-%5BCDM0056%5D-Detect-protocol-DDoS
  - id: CDM0057
    name: Detect use of msiexec to establish remote connection over http(s)
    description: 'The objective is to detect remote connection over http(s) by using
      msiexec.exe  to call out to its infrastructure, often compromised QNAP devices,  using
      HTTP requests that contain a victim‚Äôs user and device names.     Verify that
      the domain reach is indeed malicious and focus on the proxy logs  if allowed
      actions has been seen. '
    criticality: High
    tlp: green
    link: Engines\documentation\wiki\Knowledge-GraphDetection-Models%F0%9F%9B%A1%EF%B8%8F-%5BCDM0057%5D-Detect-use-of-msiexec-to-establish-remote-connection-over-http%28s%29
  - id: CDM0058
    name: SMB connection attempt to unusual or external SMB share
    description: 'Using various threat vectors, attacker may trigger a connection
      to a network share  on a SMB or WebDav server under their control.    The objective
      is to detect SMB network share connection attempts  (failure or success) at
      network level.  ### monitor UNC path pointing to external SMB network shares  In
      network traffic or proxy logs,   - look for connection to standard SMB port   -
      check Microsoft standard using agents: they contain the string WebDav   - if
      plain http, inspect http header to find "Authorization: NTLM" string.  '
    criticality: High
    tlp: amber
    link: Engines\documentation\wiki\Knowledge-GraphDetection-Models%F0%9F%9B%A1%EF%B8%8F-%5BCDM0058%5D-SMB-connection-attempt-to-unusual-or-external-SMB-share
  - id: CDM0059
    name: SSH access attempt to C3 ESXi console
    description: 'DIGIT C3 has set a policy to have SSH service disabled on ESXi servers.
      detecting a successful SSH session on an ESXi plateform has to be reported and
      investigated  This detection objective may also report on failed session attempts
      as  this indicates that the SSH service is running. '
    criticality: Severe
    tlp: amber+strict
    link: Engines\documentation\wiki\Knowledge-GraphDetection-Models%F0%9F%9B%A1%EF%B8%8F-%5BCDM0059%5D-SSH-access-attempt-to-C3-ESXi-console
  - id: CDM0060
    name: unusual SSH connections on server
    description: 'SSH sessions between stations and servers or between non-management
      servers and servers should not occured at EC data centres. Such SSH sessions
      have to be handled under DIGIT PAM service.  If such session are initiated by
      accounts under control of system admin  persons (they belong to specific cudgroup),
      there should be no alert as  those scenarios are covered by MDR under [BDR003]
      DIGIT C3 PAM service  - access policy for SSH sessions '
    criticality: High
    tlp: green
    link: Engines\documentation\wiki\Knowledge-GraphDetection-Models%F0%9F%9B%A1%EF%B8%8F-%5BCDM0060%5D-unusual-SSH-connections-on-server
  - id: CDM0061
    name: Hashicorp vault admin connects from unexpected clients
    description: 'Hashicorp Vault platform is used to deliverr SAM service at EC.  Privileged
      vault admin accounts have root access to the platform and they can perform all
      operations on it.   A policy has been set to prevent vault admin to read secrets
      stored on namespaces. This is covered by another CDM.  A vault admin must access
      Hashicorp vault admin console from PAM service. '
    criticality: Severe
    tlp: amber+strict
    link: Engines\documentation\wiki\Knowledge-GraphDetection-Models%F0%9F%9B%A1%EF%B8%8F-%5BCDM0061%5D-Hashicorp-vault-admin-connects-from-unexpected-clients
  - id: CDM0062
    name: Hashicorp vault admin reads secrets
    description: 'Hashicorp Vault platform is used to deliverr SAM service at EC.  A
      policy has been set to prevent vault admin from reading secrets stored on namespaces.
      Vault admins are allowed to list secrets but not to read their values.  A vault
      admin can modifiy this policy in order to get read rights on secrets. The objective
      is to detect whenever a vault admin reads a secrets.  All operations on Hashicorp
      Vault are recorded in audit logs and those logs collected on the SIEM  '
    criticality: Severe
    tlp: amber+strict
    link: Engines\documentation\wiki\Knowledge-GraphDetection-Models%F0%9F%9B%A1%EF%B8%8F-%5BCDM0062%5D-Hashicorp-vault-admin-reads-secrets
  - id: CDM0063
    name: Detect changes to repository visibility
    description: 'Private repositories should not be exposed to the public. Detecting
      involves monitoring for changes to the repository visibility settings. Alerting
      can be achieved  by monitoring  the relevant SCM platform audit logs for events
      and changes in the visibility parameters or for an event with such description.  -
      For Bitbucket: repo:updated: This event is triggered when a repository is updated,
      and includes  information about the repository, including its visibility.   Looking
      for changes to the is_private field to detect changes in visibility.  - For
      GitLab: ProjectChangeVisibilityEvent: This event is triggered when the visibility
      of a project changes.  Looking for changes to the visibility_level field to
      detect changes in visibility.  - For GitHub: "publicized" or "privatized" actions
      in the RepositoryEvent:  These events are triggered when a repository''s visibility
      is changed from private to public, or vice versa. Searching for these events
      in the action field of the event payload. '
    criticality: Medium
    tlp: green
    link: Engines\documentation\wiki\Knowledge-GraphDetection-Models%F0%9F%9B%A1%EF%B8%8F-%5BCDM0063%5D-Detect-changes-to-repository-visibility
  - id: CDM0064
    name: Changes in the build plan
    description: "Detection of an change to the branch protection configuration is\
      \ possible by setting up monitoring and alerting on the SCM platform audit logs.\
      \ Audit logs should include records of this activity  Some of the relevant audit\
      \ events which might indicate such activity are:  For Bamboo: entity_type: This\
      \ defines if this log was for a system setting, Null (for Global audit entries),\
      \ DeploymentProject, Plan, or ImageConfig (for Elastic Images) field_header:\
      \ A description of the field that is being changed msg: A description of the\
      \ change that is taking place new_value:\tThe new value that caused the Log\
      \ to be taken old_value:\tThe value before the change  By monitoring these audit\
      \ events, you can detect when a build plan is changed, and take appropriate\
      \ action to ensure that your build process is secure and reliable.  All audit\
      \ logs from the SCM / CI/CD platforms should be collected and stored in SIEM. "
    criticality: Medium
    tlp: green
    link: Engines\documentation\wiki\Knowledge-GraphDetection-Models%F0%9F%9B%A1%EF%B8%8F-%5BCDM0064%5D-Changes-in-the-build-plan
  - id: CDM0065
    name: Detect modified branch protection
    description: 'Branch protection rules are in place as a safety mechanism for accidental
      or intentional deployment of bad code to repositories.  Detection of an change
      to the branch protection configuration is possible by setting up monitoring
      and alerting on the SCM platform audit logs. Audit logs should include records
      of this activity  **For Bitbucket** - Project branch model created (ProjectBranchModelConfigurationCreatedEvent)
      - Project branch model deleted (ProjectBranchModelConfigurationDeletedEvent)
      - Project branch model updated (ProjectBranchModelConfigurationUpdatedEvent)
      - Project branch permission added (ProjectRefRestrictionAddedEvent) - Project
      branch permission deleted (ProjectRefRestrictionDeletedEvent) - Project branch
      permission updated (ProjectRefRestrictionUpdatedEvent)  **For Gitlab** - "Changed
      protected branch" : Triggered when branch protection is changed on a branch.
      - "Removed protected branch" : Triggered when branch protection is removed on
      a branch  **For Github** - "protected_branch" category actions: - "policy_override":
      Triggered when a branch protection requirement is overridden by a repository
      administrator. - "destroy" : Triggered when branch protection is disabled on
      a branch. - "update_require_code_owner_review" : Triggered when enforcement
      of required Code Owner review is updated on a branch.  All audit logs from the
      SCM platforms should be collected and stored in a SIEM. '
    criticality: High
    tlp: green
    link: Engines\documentation\wiki\Knowledge-GraphDetection-Models%F0%9F%9B%A1%EF%B8%8F-%5BCDM0065%5D-Detect-modified-branch-protection
  - id: CDM0066
    name: Detect non-authorized access to security or network appliances
    description: '### Detect unauthorised access to out-of-band management interface
      To use this strategy, review the architecture and logical network design of
      the out-of-band management segment together with the sysadmin team. Ensure the
      proper logs are collected to suppot the following strategies.    #### Deviation
      from defined procedures or baseline This strategy relies on processing any defined
      secops procedures (who can  connect from where, when to do actions) or observed
      baseline over 1+ month  of activity.    Then detection rules can be built using
      reference list of source hosts/Ips,  accounts and/or actions.    This approach
      is based on deviation from known states. It is prone to False  Positive (when
      a new sysadmin account is created, when a source host  changes, etc.) or **False
      Negative** (if sysadmins are allowed to use  their regular station (not a Privileged
      Access Workstation dedicated for  sysadmin tasks) to connect directly to management
      interface/console and  the workstation has been compromised).  ### Detect unauthorised
      access or activity from inline interfaces  Security or Network appliances deliver
      network services to protect the  infrastructue. Therefore they have network
      interfaces processing the  traffic and they can be targeted via those "Internet-facing"
      interfaces. This applies also to appliancees which are not on front layer (i.e.  directly
      connected to ISP router), but to any appliance that will process IP packets
      received from Internet for example up to Reverse  Proxies or Web Application
      Firewalls (typically after a RPS or a WAF inspection a layer 7 has taken place
      and new sessions are establised  between RPS and Web servers.)  #### Unusual
      source or request sent to network appliance itself. This is mainly applicable
      to appliances which have a web-based management  interface.    If such interface
      is misconfigured (human error, or left over  after troubleshooting with vendor''s
      experts over direct remote sessions) or not well protected, it can be exposed
      to Internet clients.    Reviewing vulnerability scanner results (either from
      the company team or public ones such as shodan, etc.) may help to identify such
      exposed accesses.  Even if well configured, identifying new URL path might be
      an indication of webshell attack (sucessful or attempts) and/or a Zero-day vulnerability  identified
      on the products.  ### network activity without valid account authentication
      Activity towards the appliance is observed towards resources that require  prior
      authentication either without account or with an account but there is  no valid
      authentication sequence related.  #### Change of configuration files Monitoring
      audit logs may reveal changes on configuration which are out of regular procedures. '
    criticality: Severe
    tlp: clear
    link: Engines\documentation\wiki\Knowledge-GraphDetection-Models%F0%9F%9B%A1%EF%B8%8F-%5BCDM0066%5D-Detect-non-authorized-access-to-security-or-network-appliances
  - id: CDM0067
    name: Disabling or modifying security tools
    description: 'Monitor audit or security logs for any changes aiming to disable
      or modify the audit policy, the generation or the collection of  activity, security,
      or audit logs.  **AWS** Monitor for: - the API calls to disable logging. - StopLogging
      and DeleteTrail actions.  **on compute resources or devices** Monitor processes
      and command-line arguments  to see if security tools/services are killed or
      stop running.    Monitor Registry edits for modifications to services and startup
      programs that correspond to security tools.  Monitoring for changes to other
      known features used by deployed security tools may also expose malicious activity.
      Lack of expected log events may be suspicious. '
    criticality: High
    tlp: green
    link: Engines\documentation\wiki\Knowledge-GraphDetection-Models%F0%9F%9B%A1%EF%B8%8F-%5BCDM0067%5D-Disabling-or-modifying-security-tools
  - id: CDM0068
    name: Detect fake SSL certificates
    description: 'An attacker will performs an SSL MITM attack to decrypt the HTTPS
      traffic. The attacker will achieve decryption by creating spoofed certificates
      when the device requests it from an HTTPS webpage. If the user visits any website
      with HTTPS via a web browser on the same network, they will see a "connection
      is not secure " warning in the browser.   '
    criticality: High
    tlp: green
    link: Engines\documentation\wiki\Knowledge-GraphDetection-Models%F0%9F%9B%A1%EF%B8%8F-%5BCDM0068%5D-Detect-fake-SSL-certificates
  - id: CDM0069
    name: Detect non-authorized access to endpoint management appliances
    description: 'Endpoint management appliances are critical devices for an organisation.    They
      are usually placed behind reverse proxy (RPS) and web application  firewalls
      (WAF). Whenever possible authentication should be managed with an identity provider
      service like EU LOGIN with multi-factor authentication.  When behind RPS/WAF
      enhanced monitoring should be in place to detect unusual request, sessions or
      beacons.  Management should be done from Out-of-Band network segmanet and dedicated
      management console.    When the appliances need to receive requests from clients
      over Internet, monitoring should be in place to detect bypass of preventative
      measures or  use of (**0-day**) unpatched vulnerabilities.    Detection strategies
      can be based on indicators of attack (pattern on  the URL requests), on unusual
      or first seen new client (geolocation, new  account, etc.) '
    criticality: High
    tlp: green
    link: Engines\documentation\wiki\Knowledge-GraphDetection-Models%F0%9F%9B%A1%EF%B8%8F-%5BCDM0069%5D-Detect-non-authorized-access-to-endpoint-management-appliances
  - id: CDM0070
    name: Script interpreters launched via office applications
    description: 'Monitoring script interpreters launched with an Mirosoft Office
      application as parent process '
    criticality: High
    tlp: amber+strict
    link: Engines\documentation\wiki\Knowledge-GraphDetection-Models%F0%9F%9B%A1%EF%B8%8F-%5BCDM0070%5D-Script-interpreters-launched-via-office-applications
  - id: CDM0071
    name: LOLBins Execution Related to Accounts or Group Discovery
    description: 'Detect execution of LOLBins related to discovery (or reconnaissance)
      on endpoints.  The detection approaches can target successive execution in a
      short period of time on an endpoint, or a large amount of varied execution across
      a larger timeframe. LOLBins are mostly going to be executed over the command
      line and spawn processes. Command line arguments for known discovery usage are
      also a good way to identify LOLBins being executed.  - LOLBins for Windows can
      be found on the [LOLBAS Project](https://lolbas-project.github.io/) - LOLBins
      for Unix based systems can be found on the [GTFOBins Project](https://gtfobins.github.io/)
      - LOLBins leave traces in command line execution logs, and process events '
    criticality: High
    tlp: green
    link: Engines\documentation\wiki\Knowledge-GraphDetection-Models%F0%9F%9B%A1%EF%B8%8F-%5BCDM0071%5D-LOLBins-Execution-Related-to-Accounts-or-Group-Discovery
  - id: CDM0072
    name: Outbound HTTP Proxy traffic from user endpoint towards suspicious site
    description: 'The objective is to detect successful outbound HTTP proxy traffic
      from users''  endpoints to domains/URLs marked as malicious by sandboxing sensors,
      Threat Intelligence teams via MISP for example or by 3rd-party solutions.  In
      case the IoC is running a credential harvesting page (as for example targeting
      Microsoft and other email login credentials), verify is there any successful
      POST request in user''s proxy logs.      Check if from a single user endpoint
      is having frequent outbound connections to a  suspicious URL, it can be an indicator
      of some malicious component installed on the endpoint, trying to reach outside
      to communicate with a C2 server. '
    criticality: High
    tlp: green
    link: Engines\documentation\wiki\Knowledge-GraphDetection-Models%F0%9F%9B%A1%EF%B8%8F-%5BCDM0072%5D-Outbound-HTTP-Proxy-traffic-from-user-endpoint-towards-suspicious-site
  - id: CDM0073
    name: Spyware app detected on mobile device
    description: '## Apps installed outside official stores app:    ### Android. When
      a user downloads and installs an app outside of Google Playstore, it should
      be detected by MTD as a Sideloaded Android app.    The Installer source field
      in the RAW event will show what package installer was used to install the app,
      for example: - installer=com.android.vending - app installed via Google Playstore.
      - installer=null - system app, or app installed via ADB (Android Debug Bridge)
      - installer=com.google.android.packageinstaller - app downloaded from a 3rdparty   website
      (e.g. apkpure.com ), or app installed via MDM solution.  ### iOS. When a user
      sideloads an iOS app then the app should be detected as soon as the user trusts
      the app from the developer in the Settings > General > Profiles menu, for example:
      - User downloaded and installed few apps via Third-party iOS App Store TweakBox
      (www[.]tweakboxapp[.]com) and trusts the app developer.   ## Devices with vulnerable
      OS version: These devices can be targeted to exploit zero-click vulnerabilities,
      including atypical Drive-By  downloads as initial infection vectors.    Apps
      are usually masqueraded as ISP or messaging apps.    Any MTD solution must have
      related signatures to alert on this (via Jailbreaking detection on iOS,  or
      via Unknown sources enabled on Android).    It is possible to find out if a
      device running a vulnerable Android or iOS version is being monitored: - Unexpected
      battery drain, overheating, and strange behavior from the device OS or apps.
      - Settings such as GPS and location functions may unexpectedly turn on or random
      reboots.  - If device is suddenly using far more data than normal, this could
      be an indication   that information is being sent from or remote connections
      are active.   Some actions to mitigate the risk of being subject to such surveillance:     -
      Reboots: Reboot the device to prevent persistence from taking hold. Some infections   have
      appeared to be based on zero-day exploits with low persistence. - Disable iMessage
      and FaceTime (iOS): A number of new Safari and iMessage exploits   have been
      developed in recent years.  - Use an alternative browser other than Safari or
      default Chrome. Some exploits do   not work well on alternatives such as Firefox
      Focus.  '
    criticality: High
    tlp: amber
    link: Engines\documentation\wiki\Knowledge-GraphDetection-Models%F0%9F%9B%A1%EF%B8%8F-%5BCDM0073%5D-Spyware-app-detected-on-mobile-device
  - id: CDM0074
    name: Abnormal Scheduled Tasks Activity on Windows
    description: 'Monitor non-legitimate or unknown Scheduled Tasks on Windows hosts
      (AD, Server, WKS)    The strategies should encompass all the ways described
      in TVMs to create schedule task  (outcome of the threat vector is a schedule
      task) using executable like powershell.exe  (New-ScheduledTaskAction), schtasks.exe,
      at.exe, Task Scheduler Service, taskhostw.exe,  WMI, etc..    The detection
      relies on a baseline done with a proactive assessment of what is normal,  research
      with system admins what are the defined (automated) processes and authorised  accounts/groups.    There
      might be distinct MDRs to reflect detection within maintenance windows (or working  hours)
      and out-of-band creation of scheduled tasks as the severity might be different
      even for what is normal (excluded) during maintenance windows/defined processes.    The
      alert notification should clearly state which course of action has led to a
      schedule task (this should in fine point to one of the TVMs mentioned in the
      CDM). '
    criticality: High
    tlp: green
    link: Engines\documentation\wiki\Knowledge-GraphDetection-Models%F0%9F%9B%A1%EF%B8%8F-%5BCDM0074%5D-Abnormal-Scheduled-Tasks-Activity-on-Windows
  - id: CDM0075
    name: Hashicorp vault admin changes policy
    description: 'Hashicorp Vault platform is used to deliver the ‚Äã‚Äã‚Äã**S**ecure **A**ccess  **M**anagement
      (SAM) service at EC.    Policies are defined by vault administrators in compliance
      with the  terms of service.  **The objective is to detect whenever a vault administrator
      changes a policy on the vault and to notify the group functional mailbox.**    All
      operations on Hashicorp Vault are recorded in audit logs and those logs are
      collected on the SIEM. '
    criticality: Severe
    tlp: amber+strict
    link: Engines\documentation\wiki\Knowledge-GraphDetection-Models%F0%9F%9B%A1%EF%B8%8F-%5BCDM0075%5D-Hashicorp-vault-admin-changes-policy
  - id: CDM0076
    name: Detect ransomware running on devices
    description: 'There are different ways to detect Ransomware, either through tools
      such as EDR,  network traffic analysis, event log monitoring, and the implementation
      of  detection strategies based on signatures, heuristics and anomalous behaviours.    Some
      of the strategies for detecting Ransomware include the following:  ### 1. Process
      monitoring:  Ransomware may be detected through the creation of new processes,
      the  execution of suspicious processes, etc. The detection can be built on  patterns
      related to the malware used or on unsual invocations (including  unusual parameters
      on the command line) of legit binaries (for example  use of vssadmin.exe to
      manipulate the volume shadow copies of a file  system).    It might be also
      an option to detect process establishing a network  connection with external
      destinations (see strategy 3 below).    ### 2. File activity monitoring:  Ransomware
      activity could be detected through massive file creation,  mofification, deletion
      or encryption.  Peaks on file enumeration or  directory browsing might be associated
      with a ransomware listing files  to encrypt.    Another sign could be files
      with double extensions. Based on previous  reported attacks, the list of extensions
      associated with ransomware  includes:    .ecc, .ezz, .exx, .zzz, .xyz, .aaa,
      .abc, .ccc, .vvv, .xxx, .ttt, .micro,  .encrypted, .locked, .crypto, _crypt,
      .crinf, .r5a, .XRNT, .XTBL, .crypt,  .R16M01D05, .pzdc, .good  ### 3. Network
      traffic (or logs) monitoring:  Ransomware may attempt to exfiltrate corporate
      data therefore monitoring on  unusual outgoing traffic through the proxy towards
      unusual destinations  couldD be a way to detect ransoware running on a device. '
    criticality: High
    tlp: amber
    link: Engines\documentation\wiki\Knowledge-GraphDetection-Models%F0%9F%9B%A1%EF%B8%8F-%5BCDM0076%5D-Detect-ransomware-running-on-devices
  - id: CDM0077
    name: Detection of M365 illicit application consent grant attacks
    description: 'There are various options and approaches accessible for detecting
      illicit consent  application attacks in M365. Here is a compilation of solutions
      that provide the ability  to recognize and investigate consent grants and application
      registrations:  - Azure AD Audit Logs:    The activities from Application Administrative
      category (registering app,    granting consent etc.) are logged in Azure AD
      Audit log. Both, user and admin    consent activities (delegated & application
      permissions) are logged to Azure AD    Audit logs with small differences.  -
      Azure Workbooks:    Overview of consent requests and sign-in from users to the
      granted apps. With the    built-in workbook you can drill down to individual
      app consents that''s extremely    useful when working in the environment with
      large number of activities in this area.    - Powershell:     There are scripts
      which can allow us to view the list delegated permission grants like for example:      Get-AzureADServicePrincipal
      -All $true | .\Get-AzureADPSPermissionGrants.ps1 -Preload    - KQL Queries:    For
      discovery of illicit consent application attacks can be used KQL queries.   It
      is possible to create a querie for any "Consent to application" operation,   occurs
      by a user or app. This could indicate that permissions to access the listed
      AzureApp   was provided to a malicious actor. Consent to appliction, Add service
      principal and    Add OAuth2PermissionGrant events should be rare. If available,
      additional context is added    from the AuditLogs based on CorrleationId from
      the same account that performed "Consent to    application".  - Microsoft Sentinel:      Microsoft
      Sentinel offers multiple out of the box rules related to the application administrative
      actions.   Some of them are the followings:          - Rare application consent     -
      Credential added after admin consented to Application     - Suspicious application
      consent similar to O365 Attack Toolkit     - Mail.Read Permissions Granted to
      Application '
    criticality: High
    tlp: amber
    link: Engines\documentation\wiki\Knowledge-GraphDetection-Models%F0%9F%9B%A1%EF%B8%8F-%5BCDM0077%5D-Detection-of-M365-illicit-application-consent-grant-attacks
  - id: CDM0078
    name: Detect email attachments that could be linked to spearphishing campaign
    description: 'Spearphishing campaigns with suspicious attachments, often come
      disguised with  multiple extensions, unconventional file types, or cleverly
      obfuscated names to  bypass initial security checks and dupe recipients into
      opening them.  Different type of attachments may contain payloads that are currently
      embedded within the attachment that can cause the download of malware.  ## Several
      strategies might be used:  **Attachments with double extensions**  - To detect
      suspicious files with double extensions, email protection solutions  use different
      types of techniques such as email filtering, content and attachment  scanning,
      heuristic analysis, link and attachment reputation, APTs, Sandboxing,  WL and
      BL, among others.  **Attachments with blocked extensions**  - Email security
      solutions enable the creation of policies with predefined and  customizable
      lists of blocked file extensions to identify and take action on emails  with
      attachments matching these extensions. For example, Proofpoint has a module
      called  "Exestrip" which detects malicious extensions and can be configured
      to notify the user that  a potentially malicious email has arrived and has been
      deleted.  **Attachment with RTL names / unicodes or puny-code in the name**  -
      Email security solutions use content analysis techniques to examine file names
      and  content for right-to-left (RTL) scripting, such as Arabic or Hebrew. This
      includes character  encoding checks, heuristic analysis and language detection
      algorithms to identify patterns  or anomalies in RTL languages. Custom rules,
      regular expressions and specific policies can  be set up to target RTL script
      detection, which would trigger alerts or quarantines. '
    criticality: High
    tlp: amber
    link: Engines\documentation\wiki\Knowledge-GraphDetection-Models%F0%9F%9B%A1%EF%B8%8F-%5BCDM0078%5D-Detect-email-attachments-that-could-be-linked-to-spearphishing-campaign
  - id: CDM0079
    name: Detect spear phishing campaign using specific patterns or keywords in email
      metadata
    description: 'The most commons detection patterns are:  - Urgent, yet unknown
      purchase invoice. - Warning of suspicious activity on the account. - Warning
      that the account is due to expire. - Urgent payment failed; action required
      immediately. - Parcel delivery.  The main function of these types of emails
      patterns is to attract the user attention and  persuade them to take a specific
      action, whether that be providing sensitive data,  entering links, downloading
      attachments, etc.   **IMPORTANT** pattern and keywork matching are done on email
      metadata  received in logs. They include email subjects and attachment names.  Email
      bodies nor attachment contents are not indexed nor visible in  email-related
      logs.  Email body or attachment may be processed by automatic security sensors  (Proofpoint
      Defense) but security analysts do NOT have access to the  content.    Regarding
      the keywords, the following can be observed in the logs  including subject line
      and attachment name:  - Invoice:    * Payment Invoice [date]   * Re: Invoice
      ....  - New:    * New Message from ....   * New Scanned Fax Doc-Delivery for
      ....   * New FaxTransmission from ....  - Message:   * Message From ....   *
      You have a New Message   * Telephone Message for ....  - Required:   * Verification
      Required   * Action Required: Expiration Notice on   * Attention Required. Support
      ID: ####  - File:   * File- ....   * You have a Google Drive File Shared  -
      Request:   * Your Service Request ....   * Request Notification: ....  - Action:   *
      Action Required: [Date]   * Action Required: Review Message sent on [Date]   *
      [Action Required] Password Expire  - Document:   * File Document ....   * View
      Attached Documents   * [Name] shared a document with you    ### example of specific
      patterns attacks   #### Planned phishing campaign exercise   "A planned phishing
      campaign that are carried out within organisations,    it can be observed that
      one of the most outstanding characteristics of    these emails is that they
      contain common patterns in phishing emails which    is ".... shared a file with
      you" and in the body of the message, they attach    a malicious document for
      the user to click on it". '
    criticality: High
    tlp: amber
    link: Engines\documentation\wiki\Knowledge-GraphDetection-Models%F0%9F%9B%A1%EF%B8%8F-%5BCDM0079%5D-Detect-spear-phishing-campaign-using-specific-patterns-or-keywords-in-email-metadata
  - id: CDM0080
    name: Detect AWS Cross-Account IAM Activity
    description: 'The goal is to monitor and detecte `AssumeRole` events where an
      IAM role in a different account is requested for the first time.   Monitoring
      AWS CloudTrail logs is a way to detect suspicious cross-account activity, and
      based on the evidence found, further checks may be necessary.  When a IAM role
      is assumed in another AWS account to obtain `cross-account` access to the services
      and resource in that account, AWS CloudTrail logs  the `cross-account` activity.
      CloudTrail logs `AssumeRole` calls in the  role-owning account, including the
      unique ID of the IAM entity assuming the role in the account being accessed.
      This additional information helps identifying the entity that requested `cross-account`
      access and then trace its subsequent `cross-account` activity.  Using multiple
      accounts and roles is perfectly valid behavior.  It''s suspicious when an account
      requests privileges of another account for which it hasn''t requested before. '
    criticality: High
    tlp: green
    link: Engines\documentation\wiki\Knowledge-GraphDetection-Models%F0%9F%9B%A1%EF%B8%8F-%5BCDM0080%5D-Detect-AWS-Cross-Account-IAM-Activity
  - id: CDM0081
    name: Scheduled Tasks and COM Hijacking
    description: 'The objective is to detect a scheduled task with Custom Handler
      action to retrieve class ID and using rundll32  to execute any payload build
      to run as legitimate process based on the class ID. '
    criticality: High
    tlp: green
    link: Engines\documentation\wiki\Knowledge-GraphDetection-Models%F0%9F%9B%A1%EF%B8%8F-%5BCDM0081%5D-Scheduled-Tasks-and-COM-Hijacking
  - id: CDM0082
    name: Application connecting to a SMB network share
    description: 'Threat actor uses specially crafted email messages to bypass the
      default WAV file and instead contains a path to an SMB share controlled by the
      attacker. When the Universal Naming Convention (UNC) path is accessed this forces
      an NTLM authentication from the victim to the attacker. The attacker can then
      steal the leaked NTLM hashes and to impersonate and use them. It''s important
      to note that the malicious email requires no user interaction to conduct this
      attack.  Monitor for Windows Event IDs:   - 4656 (an application attempts to
      access the object in such a way that matches the audit policy defined for that
      object in) - 4663 (an attempt was made to access an object, indicates when a
      particular operation is performed on an object)  Access or usage of the following
      Windows registry keys: An interaction with these registry keys could be an indication
      for access either an SMB or WebDAV-hosted resource.  SMB: `HKLM\System\CurrentControlSet\Services\LanmanWorkstation\NetworkProvider\Name`
      WebDAV: `HKLM\System\CurrentControlSet\Services\WebClient\NetworkProvider\ProviderPath`  Monitor
      for the process: C:\Windows\System32\SearchProtocolHost.exe This process may
      trigger the NetworkProvider registry keys for SMB and WebDAV.  Audit Exchange
      PowerShell (.ps1) script for indication of mail items that may be used to exploit
      CVE-2023-23397 vulnerability  Additional possible mitigations:  - Block TCP
      445/SMB outbound from the network by using a perimeter, local firewall or via
      VPN settings. - Add users to the Protected Users Security Group, which prevents
      the use of NTLM as an authentication mechanism.  - Apply the principle of least
      privilege by limiting the spread of administrative privileges across the domain.  Search
      for office sub processes initiation followed by SMB traffic,  which can be requested
      several times and towards multiples malicious domains. Monitoring outbound SMB
      traffic is essential to avoid potential payloads retrievals. '
    criticality: High
    tlp: green
    link: Engines\documentation\wiki\Knowledge-GraphDetection-Models%F0%9F%9B%A1%EF%B8%8F-%5BCDM0082%5D-Application-connecting-to-a-SMB-network-share
  - id: CDM0083
    name: Detect unusual web requests that could be related to C2
    description: 'A web request related to a C2 it‚Äôs any kind of communication done
      between an infected endpoint and the command&control server.    The objective
      is to detect new communications not seen before and anyway followed by regular
      or repetitive connections in following hours or days (in case there is persistence).    The
      pace can be regular (beaconing or scripted interaction) or more random (interaction).    We
      may leverage recurrent activity from specific sources to specific sites or addresses.  We
      must also keep in mind that a C2 doesn‚Äôt have to remain visible for a long time
      and  attackers use to have backup mechanisms to bring up them infra in different
      addresses  to remain hidden.    #### Detection techniques to consider:   - Monitor
      beaconing (regular or repetitive connections)    - Monitor amount of data sent    -
      Monitor long sessions (reverse shell)    - Monitor unseen/unexpected/unknown
      sites   - Monitor known IoCs The main challenge to detect potential C2 web requests
      is that the behaviour is very similar to standard legit communications, in some
      cases just to remain hidden in plain sight.   It‚Äôs also important to consider
      the entropy of the people browsing, making almost unpredictable what you can
      expect in a big environment like ours.   To increase the fidelity, but also
      to accommodate the effort to our resources, we need to combine different detection
      techniques.   Just by using known IoCs in detection becomes a short-term strategy.    Other
      log collection to consider: - DNS logs (unexpected resolve requests, huge deviations)
      - CBC logs (suspicious event followed by proxy communication) - Stamus (malware
      outbound suricata rules) - FW logs (monitor connections to non standard destination
      ports) '
    criticality: Medium
    tlp: green
    link: Engines\documentation\wiki\Knowledge-GraphDetection-Models%F0%9F%9B%A1%EF%B8%8F-%5BCDM0083%5D-Detect-unusual-web-requests-that-could-be-related-to-C2
  - id: CDM0084
    name: RDP sessions outside PAM or Central Helpdesk service
    description: '## RDP session management First implement effective RDP management
      strategies. This includes configuring detailed  event logs, using security tools
      to analyze suspicious patterns, integrating with  PAM systems for centralized
      control, applying group policies to restrict RDP access,  monitoring network
      traffic for unauthorized connections, setting up alerts and  notifications,
      conducting regular security audits, and providing staff training to  ensure
      compliance with authorized access policies   ## For monitoring:  ### Windows
      event logs  Based on excellent paper mentioned as reference, Windows event logs
      are a  good basis to monitor on the destination and/or the source of a RDP session
      (attempt)    The key 3 channels are: - Windows security      * on source device
      [EventID 4648 4648: A logon was attempted using explicit credentials](https://www.ultimatewindowssecurity.com/securitylog/encyclopedia/event.aspx?eventid=4648)      and
      service TERMSRV/*     * EventID [4778: A session was reconnected to a Window
      Station](https://www.ultimatewindowssecurity.com/securitylog/encyclopedia/event.aspx?eventid=4778)     *
      EventID [4779: A session was disconnected from a Window Station](https://www.ultimatewindowssecurity.com/securitylog/encyclopedia/event.aspx?eventid=4779).
      - Microsoft-Windows-TerminalServices-LocalSessionManager/Operational" when Address
      is not "LOCAL" - Microsoft-Windows-TerminalServices-RemoteConnectionManager
      and EventID=1149  Once a RDP session is identified, check on server for EventID
      4624/4625 for successful  authentication. Burst of 4625 could be a sign of RDP
      brute force attack (RDP servers may accept the RDP sessions but will termintate
      it if credentials are not valid)  Audit Policies: Ensure that auditing policies
      on devices are configured to log RDP realated events (success/failure)  ###
      Network-related monitoring  Look for Remote Desktop Protocol (RDP) traffic,
      which typically uses  TCP port 3389.  - Firewall logs or proxy logs (tunnel
      via proxy) on standard port TCP/3389 - network traffic on standard port TCP/3389  Some
      IDS (suricata) could identify RDP protocol on non-standard port.  Look for connections
      on port 3389 and identify the source and destination IP addresses. Cross-reference
      this information with server logs to identify the users involved. '
    criticality: High
    tlp: amber
    link: Engines\documentation\wiki\Knowledge-GraphDetection-Models%F0%9F%9B%A1%EF%B8%8F-%5BCDM0084%5D-RDP-sessions-outside-PAM-or-Central-Helpdesk-service
  - id: CDM0085
    name: detect ICS activity to restricted resources not linked to valid authentication
    description: 'The objective is to detect access to resources on Ivanti Pulse Secure  appliances
      that require prior authentication from source IPs that cannot  be related to
      any valid session (successful authentication).    the idea is to spot successful
      exploit of a vulnerability that allows  to bypass authentication '
    criticality: Severe
    tlp: clear
    link: Engines\documentation\wiki\Knowledge-GraphDetection-Models%F0%9F%9B%A1%EF%B8%8F-%5BCDM0085%5D-detect-ICS-activity-to-restricted-resources-not-linked-to-valid-authentication
  - id: CDM0086
    name: ICS detect outbound network activity
    description: 'search for outbound traffic from ICS appliance (traffic initiated
      by the ICS appliance)    A more specific detection objective could be to detect
      lateral movement  between ICS appliances or management consoles. '
    criticality: Severe
    tlp: clear
    link: Engines\documentation\wiki\Knowledge-GraphDetection-Models%F0%9F%9B%A1%EF%B8%8F-%5BCDM0086%5D-ICS-detect-outbound-network-activity
  - id: CDM0087
    name: ICS logging tampering
    description: '- Search for stop or gaps in log collection from Ivanti Pulse Connect
      (ICS). - search for any signature ID (code) related to logging such as log cleared  or
      deleted, etc. '
    criticality: Severe
    tlp: clear
    link: Engines\documentation\wiki\Knowledge-GraphDetection-Models%F0%9F%9B%A1%EF%B8%8F-%5BCDM0087%5D-ICS-logging-tampering
  - id: CDM0088
    name: ICS detect path traversal requests
    description: 'Detect path traversal attempts on Ivanti Pulse Connect (ICS) web
      components. '
    criticality: Severe
    tlp: clear
    link: Engines\documentation\wiki\Knowledge-GraphDetection-Models%F0%9F%9B%A1%EF%B8%8F-%5BCDM0088%5D-ICS-detect-path-traversal-requests
  - id: CDM0089
    name: Detect command injection on ICS Ivanti Connect Secure in URL
    description: 'Detect presence of commands in the URL request (GET POST or other
      methods).    requests can be HTML or base64 encoded in order to evade detection. '
    criticality: Severe
    tlp: clear
    link: Engines\documentation\wiki\Knowledge-GraphDetection-Models%F0%9F%9B%A1%EF%B8%8F-%5BCDM0089%5D-Detect-command-injection-on-ICS-Ivanti-Connect-Secure-in-URL
  - id: CDM0090
    name: Detect Ivanti Connect Secure ICS system modifications
    description: '- Search for reports from internal integrity checks - search for
      change in number of files for a given version '
    criticality: Severe
    tlp: clear
    link: Engines\documentation\wiki\Knowledge-GraphDetection-Models%F0%9F%9B%A1%EF%B8%8F-%5BCDM0090%5D-Detect-Ivanti-Connect-Secure-ICS-system-modifications
  - id: BDR0001
    name: EC Central Logging and Monitoring Standard
    description: 'The SOC must perform a meta monitoring of lacking log sources against
      the central monitoring policy, and identify clients which are not sending data
      as intended. '
    criticality: High
    tlp: amber
    link: Engines\documentation\wiki\Knowledge-GraphBusiness-Requests%F0%9F%8F%9B%EF%B8%8F-%5BBDR0001%5D-EC-Central-Logging-and-Monitoring-Standard
  - id: BDR0002
    name: DIGIT C3 PAM service - access policy for RDP sessions
    description: 'The SOC must monitor RDP access to servers and investigate deviations
      from the policy. The policy foresees some pre-approved deviations. For them,
      alerts will be forwarded to agreed list of recipients with CSOC ticket reference
      and the ticket will be automatically closed. IF a recipient reports back to
      SOC, case will be reopen and investigated. '
    criticality: High
    tlp: amber
    link: Engines\documentation\wiki\Knowledge-GraphBusiness-Requests%F0%9F%8F%9B%EF%B8%8F-%5BBDR0002%5D-DIGIT-C3-PAM-service---access-policy-for-RDP-sessions
  - id: BDR0003
    name: DIGIT C3 PAM service - access policy for SSH sessions
    description: 'The SOC must monitor SSH access to servers and investigate deviations
      from the policy. The policy foresees some pre-approved deviations. For them,
      alerts will be forwarded to agreed list of recipients with CSOC ticket reference
      and the ticket will be automatically closed. If a recipient reports back to
      SOC, the case will be reopen and investigated by SOC analysts. '
    criticality: High
    tlp: amber
    link: Engines\documentation\wiki\Knowledge-GraphBusiness-Requests%F0%9F%8F%9B%EF%B8%8F-%5BBDR0003%5D-DIGIT-C3-PAM-service---access-policy-for-SSH-sessions
  - id: BDR0004
    name: ESS CBC activity initiated from outside EC or vetted IP ranges
    description: 'SOC must monitor any activity initiated from outside EC or vetted
      IP ranges to the ESS VMware Carbon Black Cloud (CBC) tenants. The policy foresees
      some pre-approved deviations, since some tenants might have extra-muros contractors
      managing the components of the tenants. SOC must send an alert to the tenant
      owners when the conditions previously described are met.  There is already an
      event to be whitelisted: when the user confirms the email, during the activation
      of an account, we will see two audit log entries one from the user IP location
      and a second from AWS IP. Concretely, the audit log entry is "Successfully confirmed
      the email - USER@EMAIL.ADDRESS" '
    criticality: High
    tlp: amber
    link: Engines\documentation\wiki\Knowledge-GraphBusiness-Requests%F0%9F%8F%9B%EF%B8%8F-%5BBDR0004%5D-ESS-CBC-activity-initiated-from-outside-EC-or-vetted-IP-ranges
  - id: BDR0005
    name: ESS CBC High Privileged activity
    description: 'CATCH must monitor any high privileged activity and notify the tenant
      point of contact related to security monitoring. '
    criticality: High
    tlp: amber
    link: Engines\documentation\wiki\Knowledge-GraphBusiness-Requests%F0%9F%8F%9B%EF%B8%8F-%5BBDR0005%5D-ESS-CBC-High-Privileged-activity
  - id: BDR0006
    name: JRC IES top failed Windows authentication reporting
    description: 'Weekly release a report on failed authentication accounts (descending
      order of failed accounts) with additional information: - from where (src IP
      and/or src host) - Event ID and Error Code (with its meaning) - any successful
      login for that account and if yes from which devices  Reports will be sent as
      CSV (comma-separated values) attachment to JRC LISO.'
    criticality: Medium
    tlp: amber+strict
    link: Engines\documentation\wiki\Knowledge-GraphBusiness-Requests%F0%9F%8F%9B%EF%B8%8F-%5BBDR0006%5D-JRC-IES-top-failed-Windows-authentication-reporting
  - id: BDR0007
    name: SHS CLIMA - Non compliance monitoring and alerting on accesss and usage
      of CLIMA DBMS
    description: 'relevant monitoring and detection rules should cover the following
      cases: - Misuse of EUTL_RO_PUBLIC DBMS Account - Misuse of SECURITY_ADMIN and
      SECURITY_OFFICER DBMS Accounts - Access from a non-authorized host - Attempt
      to be accessed by a non-authorized user account - Attempt to be accessed by
      a unknown database account - Access to unauthorized DBMS business tables - Access
      to the DB account not permitted - DB01 - Access to the privileged database account
      outside working hours - DB-02 - Access to non-privileged database account outside
      working hours - DB-03 - Access to privileged database account inside working
      hours - DB-04 - DB Console Access from non-authorized host '
    criticality: High
    tlp: amber
    link: Engines\documentation\wiki\Knowledge-GraphBusiness-Requests%F0%9F%8F%9B%EF%B8%8F-%5BBDR0007%5D-SHS-CLIMA---Non-compliance-monitoring-and-alerting-on-accesss-and-usage-of-CLIMA-DBMS
  - id: BDR0008
    name: ESS CBC User not signed in for the last 6 months
    description: 'CATCH must monitor when a valid account has not signed in for the
      last 6 months. CATCH must send on a monthly basis a report by email to the EDRT
      Operational POC of the ESS customer listing all valid accounts that have not
      signed in for last 6 months with the data of last signed in. '
    criticality: High
    tlp: amber
    link: Engines\documentation\wiki\Knowledge-GraphBusiness-Requests%F0%9F%8F%9B%EF%B8%8F-%5BBDR0008%5D-ESS-CBC-User-not-signed-in-for-the-last-6-months
  - id: BDR0009
    name: DIGIT S2 CATCH CSOC integrations via ES_SPLUNK
    description: 'A CSOC integration processes correlated alerts coming from one or
      several analytics or detection platform including ES-SPLUNK itself in order
      to  cross-correlated and therefore confirm or infirm this is an alert to be
      qualified by S2 CSIRC.    ## list of analytics or detection platforms:   - ESS
      CSM (CBC Analytics)   - ESS CSM (CBC Watchlist)   - STAMUS   - Azure Sentinel   -
      Microsoft Defender for Cloud / Cloud App   - STAMUS   - CANARY Tokens   - SYSDIG   -
      MTD (Zimperium)   - AWS GuardDuty  A CSOC integration initiates a simple workflow:     1.
      correlated alert is received from the analytic or detection platform     2.
      inclusion filters are applied to them     3. exclusion filters applied     4.
      CSOC temporary exclusion filters when an alert is under qualification     or
      potential security incident under investigation     5. checks to avoid duplicates      6.
      cross-checks and enrichment. '
    criticality: High
    tlp: amber
    link: Engines\documentation\wiki\Knowledge-GraphBusiness-Requests%F0%9F%8F%9B%EF%B8%8F-%5BBDR0009%5D-DIGIT-S2-CATCH-CSOC-integrations-via-ES_SPLUNK
  - id: BDR0010
    name: ESS CBC lack of CBC audit logs
    description: 'CATCH must monitor that VMware CBC audit logs arrive properly to
      Splunk for every tenant. CATCH must notify EC DIGIT ESS Functional Mailbox in
      case they do not arrive to Splunk. '
    criticality: Emergency
    tlp: amber
    link: Engines\documentation\wiki\Knowledge-GraphBusiness-Requests%F0%9F%8F%9B%EF%B8%8F-%5BBDR0010%5D-ESS-CBC-lack-of-CBC-audit-logs
  - id: BDR0011
    name: ESS EDRT integration settings changed
    description: 'CATCH must monitor when the EDRT integration settings are modified  and
      notify EC DIGIT ESS Functional Mailbox.   '
    criticality: Emergency
    tlp: amber
    link: Engines\documentation\wiki\Knowledge-GraphBusiness-Requests%F0%9F%8F%9B%EF%B8%8F-%5BBDR0011%5D-ESS-EDRT-integration-settings-changed
  - id: BDR0012
    name: ESS CBC lack of CBC alerts
    description: 'CATCH must monitor that VMware CBC tenant alerts arrive properly
      to Splunk. CATCH must notify EC DIGIT ESS Functional Mailbox in case they do
      not arrive to Splunk. '
    criticality: Emergency
    tlp: amber
    link: Engines\documentation\wiki\Knowledge-GraphBusiness-Requests%F0%9F%8F%9B%EF%B8%8F-%5BBDR0012%5D-ESS-CBC-lack-of-CBC-alerts
  - id: BDR0013
    name: DIGIT C3 PAM service - access policy for Super User sessions
    description: 'The SOC must monitor PAM super user (sroot) access to servers and
      investigate deviations from the policy.  The policy does not foresee any usage
      for this user by the operations team.  It is not allowed for operations team
      to use the super user (sroot) to connect to RDP, SSH, WEB targets. The only
      time an sroot user should be used is if eulogin is not available.  For them,
      alerts will be forwarded to agreed list of recipients with CSOC ticket reference
      and the ticket  will be automatically closed. IF a recipient reports back to
      SOC, case will be reopen and investigated. '
    criticality: High
    tlp: amber
    link: Engines\documentation\wiki\Knowledge-GraphBusiness-Requests%F0%9F%8F%9B%EF%B8%8F-%5BBDR0013%5D-DIGIT-C3-PAM-service---access-policy-for-Super-User-sessions
  - id: BDR0014
    name: DIGIT protected RPM - access policy violation
    description: 'Detect access attempts (success and failure) to the protected RPMs
      from IPs  not in the vetted IP range list and/or for users not in vetted groups.   ##
      presentation: ### DIGIT services exposed behind protected RPMs:  - ES-SPLUNK  -
      SNOW  - CBC  - ES-SPLUNK BREAK-GLASS-SRV  - SPLUNK BREAK-GLASS-SRV  - EFGS-EDCC  ###
      Protected RPMs in scope   - es-splunk.tech.ec.europa.eu   - es-splunk.acceptance.tech.ec.europa.eu   -
      digit.service-now.com   - defense-eu.conferdeploy.net   - splunk.acceptance.tech.ec.europa.eu   -
      splunk.tech.ec.europa.eu   - efgs-nexus.tech.ec.europa.eu   - efgs-truesight.tech.ec.europa.eu   -
      efgs.tech.ec.europa.eu  ### Combination of DIGIT services with RPMs Each RPM
      might be exposed to deliver one or several DIGIT services. The combination is
      documented in lookup  SOC_LT_086_PV-AUT-03_vetted_sites_by_service-include.csv  ###
      Mapping between DIGIT services and vetted IP ranges The list of IP ranges allowed
      to access DIGIT services is  maintained in lookup SOC_LT_086_PV-AUT-03_vetted_IP_ranges_by_service-include.csv  ###
      Mapping between DIGIT services and users The mapping is maintained in lookup  SOC_LT_189_IAM_authorised_user_by_service-exclude.csv    For
      the moment the mapping is limited to ES-SPLUNK  SOC_LT_189_IAM_authorised_user_ES-SPLUNK-exclude.csv '
    criticality: High
    tlp: amber
    link: Engines\documentation\wiki\Knowledge-GraphBusiness-Requests%F0%9F%8F%9B%EF%B8%8F-%5BBDR0014%5D-DIGIT-protected-RPM---access-policy-violation
  - id: BDR0015
    name: EC-related ServiceNow local account advanced monitoring
    description: 'The purposes of this BDR is to deploy additional detection rules
      to protect  access and use of the SaaS ServiceNow instances. THe priority goes
      to the  instance used in PRODUCTION at https://digit.service-now.com/ but any  instance
      that may contain EC real data and not just anonymised samples  or data or code
      that will be moved to PRODUCTION instance.    The objective is to ensure accounts
      are not comppromise and that data, code  and configuration are not tampered
      with.  '
    criticality: High
    tlp: amber
    link: Engines\documentation\wiki\Knowledge-GraphBusiness-Requests%F0%9F%8F%9B%EF%B8%8F-%5BBDR0015%5D-EC-related-ServiceNow-local-account-advanced-monitoring
  - id: BDR0016
    name: Forensic data configuration for mobile devices
    description: 'Each time a new MobileIron MDM group is created and added into Zimperium
      console, the settings template is set to High. This means that location feature
      is set by default to street - city - country. This feature must be set to None
      (deactivated).    DIGIT.C6 Mobile Solutions team is responsible to disable the
      location feature in  compliance with the DPIA and their procedures should have
      the appropriate  provisions.    To avoid any security incident resulting from
      a misconfiguration,  DIGIT.S2 is going to monitor when the location feature
      is enabled for any device managed by DIGIT.C6 Mobile Solutions team.    If enabled,
      a notification is sent to DIGIT.C6 Mobile Solutions team to  remind them to
      deactive the feature.   '
    criticality: High
    tlp: amber
    link: Engines\documentation\wiki\Knowledge-GraphBusiness-Requests%F0%9F%8F%9B%EF%B8%8F-%5BBDR0016%5D-Forensic-data-configuration-for-mobile-devices
